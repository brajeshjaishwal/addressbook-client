{"version":3,"sources":["components/app/privateroute.js","constants/auth.js","api/api.js","actions/auth.js","components/user/register.js","components/user/login.js","constants/group.js","actions/group.js","components/group/group.js","components/group/groupContainer.js","components/contact/contact.js","components/contact/contactContainer.js","components/dashboard.js","components/group/editGroup.js","constants/contact.js","actions/contact.js","components/contact/editContact.js","components/header.js","components/app/app.js","serviceWorker.js","reducers/authReducer.js","reducers/contactReducer.js","reducers/groupReducer.js","reducers/index.js","store/store.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","sessionStorage","getItem","Redirect","to","pathname","state","from","location","constants","LOGIN","LOGIN_SUCCEDED","LOGIN_FAILED","REGISTER","REGISTER_SUCCEDED","REGISTER_FAILED","FETCHDOMAIN","FETCHDOMAIN_SUCCEDED","FETCHDOMAIN_FAILED","proxy","axios","create","baseURL","getConfig","headers","auth","handleError","error","errorMessage","response","console","log","data","message","request","config","registerUserAction","name","email","phone","password","post","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","resp","_ref3","wrap","_context","prev","next","type","payload","loading","sent","undefined","registerFailed","registered","t0","stop","this","_x","apply","arguments","loginUserAction","_ref4","_ref5","_callee2","_ref6","user","token","_context2","setItem","loginFailed","loginSucceded","_x2","fetchDomainAction","_ref7","_callee3","_ref8","domain","_context3","get","fetchDomainFailed","fetchDomainSucceded","_x3","oneCapitalLetter","RegExp","oneNumber","oneSpecialLetter","min8Length","RegisterComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","e","tempValue","target","value","setState","defineProperty","test","passwordError","tempEmail","validator","isEmail","emailError","isNumeric","length","phoneError","onSubmitHandler","event","_this$state","preventDefault","alert","abrupt","open","registerUser","nameError","Modal","size","closeOnEscape","closeOnDimmerClick","Header","Content","Input","fluid","placeholder","style","marginTop","onChange","icon","label","labelPosition","color","href","Divider","Button","primary","onClick","register","Message","connect","bindActionCreators","LoginComponent","loginUser","history","push","login","constants_group","objectSpread","AddGroup","AddGroup_Success","AddGroup_Failure","RemoveGroup","RemoveGroup_Success","RemoveGroup_Failure","EditGroup","EditGroup_Success","EditGroup_Failure","FetchCachedGroup","FetchCachedGroupNames","FetchCachedGroupItems","FetchGroupList","FetchGroupList_Success","FetchGroupList_Failure","ChangeActive_Group","ChangeActive_Group_Success","ChangeActive_Group_Failure","addGroupAction","group","success","addGroupFailed","addGroupSucceded","deleteGroupAction","groupid","delete","concat","deleteGroupStarted","deleteGroupFailed","deleteGroupSucceded","editGroupAction","active","put","_ref9","editGroupFailed","editGroupSucceded","fetchAllGroupsAction","_ref10","_callee4","result","_context4","groups","fetchGroupsFailed","_x4","fetchCachedGroupAction","_ref11","fetchCachedGroupItemsAction","_ref12","GroupComponent","onEdit","id","onDelete","removeGroup","onSelect","fetchGroup","_this$props$group","total","selectedGroup","editable","List","Item","key","Card","Grid","columns","Row","Column","width","Link","Label","circular","marginLeft","empty","GroupContainerComponent","newgroup","onSearchChange","onAddGroup","addGroup","fetchAllGroups","_this2","allcontacts","forEach","g","Segment","Icon","align","compact","map","group_group","ContactComponent","contact","_id","_this$props$contact","job","ContactContainerComponent","activePage","totalPages","searchString","searchBy","sortBy","handlePaginationChange","onSearch","onSort","match","params","contactList","groupname","contacts","options","text","Select","defaultValue","selection","c","contact_contact","Pagination","pointing","secondary","onPageChange","disabled","Dashboard","stretched","groupContainer","contactContainer","EditGroupComponent","onCheckedChange","dirtyGroup","editGroup","onExit","fetchCachedGroup","background","iconPosition","Checkbox","toggle","checked","Group","content","Or","constants_contact","AddContact","AddContact_Success","AddContact_Failure","RemoveContact","RemoveContact_Success","RemoveContact_Failure","EditContact","EditContact_Success","EditContact_Failure","FetchContact","FetchContact_Success","FetchContact_Failure","ChangeActive_Contact","ChangeActive_Contact_Success","ChangeActive_Contact_Failure","addContactAction","addContactFailed","addContactSucceded","editContactAction","editContactStarted","editContactFailed","editContactSucceded","EditContactComponent","onSelectionChange","groupoptions","find","o","editContact","addContact","defaultGroup","textContent","currentContact","HeaderComponent","onAddContact","onLogout","clear","inverted","as","Subheader","withRouter","App","componentDidMount","fetchDomain","BrowserRouter","Container","header","Switch","exact","path","Boolean","window","hostname","initialState","authReducer","action","globals","contactReducer","groupReducer","toConsumableArray","filtered","filter","groupNames","_selectedGroup$contac","allGroups","_allGroups$contacts","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f062fc9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    return <Route {...rest} render={props => (\r\n                                        sessionStorage.getItem('token')\r\n                                            ? <Component {...props} />\r\n                                            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                                    )} />\r\n    }","const constants = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGIN_SUCCEDED: \"LOGIN_SUCCEDED\",\r\n    LOGIN_FAILED: \"LOGIN_FAILED\",\r\n\r\n    REGISTER: \"REGISTER\",\r\n    REGISTER_SUCCEDED: \"REGISTER_SUCCEDED\",\r\n    REGISTER_FAILED: \"REGISTER_FAILED\",\r\n\r\n    FETCHDOMAIN: \"FETCHDOMAIN\",\r\n    FETCHDOMAIN_SUCCEDED: \"FETCHDOMAIN_SUCCEDED\",\r\n    FETCHDOMAIN_FAILED: \"FETCHDOMAIN_FAILED\",\r\n}\r\n\r\nexport default constants","import axios from 'axios'\r\n\r\nexport const proxy = axios.create({\r\n    baseURL: 'https://addressbook2-server.herokuapp.com/'// 'http://localhost:3300/'\r\n})\r\n\r\nexport function getConfig() {\r\n    return { headers: {'auth': sessionStorage.getItem('token') } }\r\n}\r\n\r\nexport const handleError = error => {\r\n    let errorMessage = ''\r\n    if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response);\r\n        errorMessage = error.response.data.message;\r\n        // console.log(error.response.status);\r\n        // console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the \r\n        // browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n        errorMessage = 'Network error'\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n        errorMessage = error.message;\r\n    }\r\n    console.log(error.config);\r\n    return errorMessage;\r\n}\r\n","import constants from '../constants/auth'\r\nimport { proxy, handleError } from '../api/api'\r\n\r\nconst { REGISTER, REGISTER_FAILED, REGISTER_SUCCEDED, \r\n        LOGIN, LOGIN_SUCCEDED, LOGIN_FAILED,\r\n        FETCHDOMAIN, FETCHDOMAIN_SUCCEDED, FETCHDOMAIN_FAILED\r\n        } = constants\r\n\r\nexport const registerUserAction = function ({name, email, phone, password}) {\r\n    const request = proxy.post('users/register', {name, email, phone, password})\r\n    return async (dispatch) => {\r\n        dispatch(registerStarted())\r\n        try{\r\n            let resp = await request\r\n            let {message} = await resp.data\r\n            if(message !== undefined) {\r\n                dispatch(registerFailed(message))\r\n            }else \r\n                dispatch(registerSucceded())\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(registerFailed(errorMessage))\r\n        }\r\n    }\r\n    function registerStarted() { return { type: REGISTER , payload: { error: false, loading: true }} }\r\n    function registerSucceded() { return { type: REGISTER_SUCCEDED, payload: { registered: true, loading: false } } }\r\n    function registerFailed(error) { return { type: REGISTER_FAILED, payload: { error, loading: false} } }\r\n}\r\n\r\nexport const loginUserAction = ({email, password}) => {\r\n    return async (dispatch) => {\r\n        dispatch(loginStarted())\r\n        try{\r\n            let resp = await proxy.post('users/login', {email, password})\r\n            let {user, token, message } = await resp.data\r\n            if(user && user !== '' && user !== undefined)\r\n                sessionStorage.setItem('name', user.name)\r\n            if(token && token !== '' && token !== undefined )\r\n                sessionStorage.setItem('token', token)\r\n            if(user === null || user === undefined || token === undefined) {\r\n                dispatch(loginFailed(message))\r\n            }else \r\n                dispatch(loginSucceded(user))\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(loginFailed(errorMessage))\r\n        }\r\n    }\r\n    function loginStarted() { return { type: LOGIN, payload: { error: false, loading: true } } }\r\n    function loginSucceded(user) { return { type: LOGIN_SUCCEDED, payload: { user, loading: false } } }\r\n    function loginFailed(error) { return { type: LOGIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n\r\nexport const fetchDomainAction = () => {\r\n    return async (dispatch) => {\r\n        dispatch(fetchDomainStarted())\r\n        try{\r\n            let resp = await proxy.get('domain')\r\n            let { domain, message } = await resp.data\r\n            if(domain === null || domain === undefined || domain === undefined) {\r\n                dispatch(fetchDomainFailed(message))\r\n            }else {\r\n                sessionStorage.setItem('domain', domain)\r\n                dispatch(fetchDomainSucceded(domain))\r\n            }\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(fetchDomainFailed(errorMessage))\r\n        }\r\n    }\r\n    function fetchDomainStarted() { return { type: FETCHDOMAIN, payload: { error: false, loading: true } } }\r\n    function fetchDomainSucceded(domain) { return { type: FETCHDOMAIN_SUCCEDED, payload: { domain, loading: false } } }\r\n    function fetchDomainFailed(error) { return { type: FETCHDOMAIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Message, Divider} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { registerUserAction } from '../../actions/auth';\r\nimport validator from 'validator'\r\n\r\n//var strongRegex = new RegExp(\"^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\nconst oneCapitalLetter = new RegExp(\"^(?=.*[A-Z])\")\r\nconst oneNumber = new RegExp(\"^(?=.*[0-9])\")\r\nconst oneSpecialLetter = new RegExp(\"^(?=.*[!@#$%^&*])\")\r\nconst min8Length = new RegExp(\"^(?=.{8,})\")\r\n\r\n\r\nclass RegisterComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone:'',\r\n            password: '',\r\n            open: true,\r\n            passwordError: 'length > 8, special character, number, capital letter',\r\n            emailError: '',\r\n            phoneError: '',\r\n            nameError: '',\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        let tempValue = e.target.value\r\n        this.setState({[e.target.name]: tempValue})\r\n        if(e.target.name === 'password') {\r\n            let error = ''\r\n            if(!min8Length.test(tempValue)) {\r\n                error += 'length > 8, '\r\n            }\r\n            if(!oneSpecialLetter.test(tempValue)) {\r\n                error += 'special character, '\r\n            }\r\n            if(!oneNumber.test(tempValue)) {\r\n                error += 'number, '\r\n            }\r\n            if(!oneCapitalLetter.test(tempValue)) {\r\n                error += 'capital letter'\r\n            }\r\n            this.setState({passwordError: error})\r\n        } else if(e.target.name === 'email') {\r\n            let tempEmail = tempValue + this.props.domain\r\n            let error = ''\r\n            if(tempValue && !validator.isEmail(tempEmail)) {\r\n                error = 'Email not valid'\r\n            }\r\n            this.setState({emailError: error})\r\n        } else if(e.target.name === 'phone') {\r\n            let error = ''\r\n            if(tempValue && (!validator.isNumeric(tempValue) || tempValue.length < 10)) {\r\n                error = 'phone number not valid'\r\n            }\r\n            this.setState({phoneError: error})\r\n        } \r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        if( this.state.emailError || this.state.passwordError || this.state.phoneError ||\r\n            !this.state.name || !this.state.password || !this.state.phone || !this.state.email)\r\n        {\r\n            alert('please correct all entries.')\r\n            return\r\n        }\r\n        this.setState({open: false})\r\n        let {name, email, phone, password} = this.state\r\n        await this.props.registerUser({name, email, phone, password,})\r\n    }\r\n\r\n    render() {\r\n        let registered = this.props.registered || false\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='user' ></Input>\r\n\r\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label = '@inmar.com' labelPosition='right'></Input>\r\n                    { this.state.emailError && <span style={{color:'red'}}>{this.state.emailError}</span>}\r\n\r\n                    <Input name=\"phone\" fluid placeholder='Enter phone number' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='phone' ></Input>\r\n                    { this.state.phoneError && <span style={{color:'red'}}>{this.state.phoneError}</span>}\r\n\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.state.passwordError && <span style={{color:'red'}}>{this.state.passwordError}</span>}\r\n\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    { registered && <span style={{color:'green'}}>Now you are registered, please <a href='/login'>login</a> to proceed.</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='register' primary fluid\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.register} >Register</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    Already a user? <a href='/login'>Login</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n        registered: state.auth.registered,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        registerUser: bindActionCreators(registerUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterComponent)","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Divider, Message} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { loginUserAction } from '../../actions/auth'\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            open: true,\r\n            login: false,\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        if(!this.state.email || !this.state.password)\r\n        {\r\n            alert('please enter required values.')\r\n            return\r\n        } \r\n        let { email, password } = this.state\r\n        await this.props.loginUser({email, password})\r\n        let token = sessionStorage.getItem('token')\r\n        if(token && token !== null && token !== undefined && token !== 'undefined') {\r\n            this.setState({open: false})       \r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"email\" fluid placeholder='Enter your username' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label='@inmar.com' labelPosition='right'></Input>\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter your password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='login' primary fluid size='small'\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.login} >Login</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    New to us? <a href='/register'>Register</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loginUser: bindActionCreators(loginUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)","const constants = {\n    AddGroup: 'AddGroup',\n    AddGroup_Success: 'AddGroup_Success',\n    AddGroup_Failure: 'AddGroup_Failure',\n\n    RemoveGroup: 'RemoveGroup',\n    RemoveGroup_Success: 'RemoveGroup_Success',\n    RemoveGroup_Failure: 'RemoveGroup_Failure',\n\n    EditGroup: 'EditGroup',\n    EditGroup_Success: 'EditGroup_Success',\n    EditGroup_Failure: 'EditGroup_Failure',\n\n    FetchCachedGroup: 'FetchCachedGroup',\n    FetchCachedGroupNames: 'FetchCachedGroupName',\n    FetchCachedGroupItems: 'FetchCachedGroupItems',\n\n    FetchGroupList: 'FetchGroupList',\n    FetchGroupList_Success: 'FetchGroupList_Success',\n    FetchGroupList_Failure: 'FetchGroupList_Failure',\n\n    ChangeActive_Group: 'ChangeActive_Group',\n    ChangeActive_Group_Success: 'ChangeActive_Group_Success',\n    ChangeActive_Group_Failure: 'ChangeActive_Group_Failure',\n}\n\nexport default { ...constants }","import constants from '../constants/group'\nimport { proxy, handleError, getConfig } from '../api/api'\n\nconst { AddGroup, AddGroup_Success, AddGroup_Failure,\n        FetchCachedGroup, FetchCachedGroupNames, FetchCachedGroupItems,\n        FetchGroupList, FetchGroupList_Success, FetchGroupList_Failure,\n        RemoveGroup, RemoveGroup_Success, RemoveGroup_Failure,\n        EditGroup, EditGroup_Success, EditGroup_Failure } = constants\n\nexport const addGroupAction = function ({ name }) {\n    const config = getConfig();\n    const request = proxy.post('contacts/group/add', { name }, config)\n    return async (dispatch) => {\n        dispatch(addGroupStarted())\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('add group action', group)\n            if(group === null) {\n                dispatch(addGroupFailed(message))    \n            } else {\n                dispatch(addGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(addGroupFailed(errorMessage))\n        }\n    }\n    function addGroupStarted() { return { type: AddGroup, payload: {error: '', success: false, loading: 'addgroup'} } }\n    function addGroupSucceded(group) { return { type: AddGroup_Success, payload: { group, loading: '', success: true } } }\n    function addGroupFailed(error) { return { type: AddGroup_Failure, payload: { error, loading: ''} }}\n}\n\nexport const deleteGroupAction = function ({ groupid }) {\n    const config = getConfig();\n    const request = proxy.delete(`contacts/group/${groupid}`, config)\n    return async (dispatch) => {\n        dispatch(deleteGroupStarted(groupid))\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('delete group action', group)\n            if(group === null) {\n                dispatch(deleteGroupFailed(message))    \n            } else {\n                dispatch(deleteGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(deleteGroupFailed(errorMessage))\n        }\n    }\n    function deleteGroupStarted(groupid) { return { type: RemoveGroup, payload: {error: '', success: false, loading: groupid} } }\n    function deleteGroupSucceded(group) { return { type: RemoveGroup_Success, payload: { group, loading: '', success: true } } }\n    function deleteGroupFailed(error) { return { type: RemoveGroup_Failure, payload: { error, loading: ''} }}\n}\n\nexport const editGroupAction = function ({groupid, name, active}) {\n    const config = getConfig();\n    const request = proxy.put(`contacts/group/${groupid}`, { name, active }, config)\n    return async (dispatch) => {\n        dispatch(editGroupStarted())\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('edit group action', group)\n            if(group === null) {\n                dispatch(editGroupFailed(message))    \n            } else {\n                dispatch(editGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(editGroupFailed(errorMessage))\n        }\n    }\n    function editGroupStarted() { return { type: EditGroup, payload: {error: '', success: false, loading: true} } }\n    function editGroupSucceded(group) { return { type: EditGroup_Success, payload: { group, loading: false, success: true } } }\n    function editGroupFailed(error) { return { type: EditGroup_Failure, payload: { error, loading: false} }}\n}\n\nexport const fetchAllGroupsAction = function () {\n    var config = getConfig();\n    const request = proxy.get(`contacts/group/list`, config)\n    return async (dispatch) => {\n        dispatch(fetchGroupsStarted())\n        try{\n            let resp = await request\n            let result = await resp.data\n            if(result.groups === null) {\n                dispatch(fetchGroupsFailed(result.message))    \n            } else {\n                dispatch(fetchGroupsSucceded(result.groups))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(fetchGroupsFailed(errorMessage))\n        }\n    }\n    function fetchGroupsStarted() { return { type: FetchGroupList, payload: { loading: true, error: '' } } }\n    function fetchGroupsSucceded(groups) { return { type: FetchGroupList_Success, payload: { groups, loading: false } } }\n    function fetchGroupsFailed(error) { return { type: FetchGroupList_Failure, payload: { error, loading: false}}}\n}\n\nexport const fetchCachedGroupAction = function ({groupid}) {\n    return {\n        type: FetchCachedGroup,\n        payload: { groupid }\n    }\n}\n\nexport const fetchCachedGroupItemsAction = function ({groupid}) {\n    return {\n        type: FetchCachedGroupItems,\n        payload: { groupid }\n    }\n}\n\nexport const fetchCachedGroupNamesAction = function () {\n    return {\n        type: FetchCachedGroupNames,\n        payload: { }\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { List, Card, Grid, Button, Label } from 'semantic-ui-react';\nimport { deleteGroupAction, fetchCachedGroupItemsAction } from '../../actions/group';\nimport { connect } from 'react-redux'\nimport {bindActionCreators} from 'redux'\n\nclass GroupComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        this.props.history.push(`/editgroup/${this.props.group.id}`)\n    }\n    onDelete = async event => {\n        event.preventDefault()\n        await this.props.removeGroup({groupid: this.props.group.id})\n    }\n    onSelect = async event => {\n        event.preventDefault()\n        await this.props.fetchGroup({groupid: event.target.name})\n    }\n    render() {\n        let { id, name, active, total } = this.props.group\n        let selectedGroup = this.props.selectedGroup ? this.props.selectedGroup.name : 'All Contacts'\n        let editable = name !== 'All Contacts'\n        return (\n            <List.Item key={id} >\n                <Card fluid color={selectedGroup === name ? 'red' : 'grey'} >\n                    <Card.Content>\n                        <Grid columns={2}>\n                            <Grid.Row >\n                                <Grid.Column width='11'>\n                                    <div >\n                                        <Link name={id} to={`/dashboard/${id}`} onClick={this.onSelect}>{name}</Link>\n                                        <Label circular style={{marginLeft:'1em'}} >{total}</Label>\n                                        {//don't show it when all contacts are selected\n                                        editable && \n                                        <Label circular empty style={{marginLeft:'0.5em'}} color={ active ? 'green' : 'grey' } />\n                                        }\n                                    </div>\n                                </Grid.Column>\n                                <Grid.Column width='5' >\n                                {   editable && \n                                    <div>\n                                        <Button icon='pencil' size='tiny' circular\n                                            onClick={this.onEdit}/>\n                                        <Button icon='delete' size='tiny' circular color='yellow' \n                                            loading = {this.props.loading === id}\n                                            onClick={this.onDelete} />\n                                    </div>\n                                }\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.group.loading,\n        error: state.group.error,\n        selectedGroup: state.group.selectedGroup\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeGroup: bindActionCreators(deleteGroupAction, dispatch),\n        fetchGroup: bindActionCreators(fetchCachedGroupItemsAction, dispatch)\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupComponent)","import React, { Component } from 'react'\nimport GroupComponent from './group';\nimport { Grid, List, Segment, Header, Input, Icon, Button } from 'semantic-ui-react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { addGroupAction, fetchAllGroupsAction } from '../../actions/group'\n\nclass GroupContainerComponent extends Component {\n\n    state = {\n        newgroup:''\n    }\n    \n    async componentDidMount() {\n        await this.props.fetchAllGroups()\n    }\n\n    onSearchChange = () => {\n        \n    }\n\n    onAddGroup = async event => {\n        await this.props.addGroup({name: this.state.newgroup})\n        if(this.props.error) {\n            alert(this.props.error)\n        }\n        this.setState({newgroup: ''})\n    }\n\n    onChangeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render () {\n        let groups = []\n        let allcontacts = { id: '00000', name: 'All Contacts', total: 0, active: true }\n        groups.push(allcontacts)\n        this.props.groups.forEach(g => {\n            allcontacts.total += g.total\n            groups.push(g)\n        })\n\n        return (\n            <Segment>\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <Grid.Column > \n                            <Header color='yellow'>\n                                <Icon name='group' />\n                                <Header.Content>Groups</Header.Content>\n                            </Header>\n                        </Grid.Column>\n                        <Grid.Column align='right'>\n                            <Input fluid \n                                name='newgroup'\n                                label={<Button icon='add' loading={this.props.loading} compact onClick={this.onAddGroup}/>}\n                                labelPosition='right'\n                                value={this.state.newgroup}\n                                placeholder='Add new group' \n                                onChange={this.onChangeHandler}/>\n                        </Grid.Column>\n                        <Grid.Column >\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <List >\n                    {\n                        groups.map(g => \n                            <GroupComponent name={g.name} key={g.name} group={g} {...this.props}/>)\n                    }\n                </List>\n            </Segment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        groups: state.group.groups,\n        loading: state.group.loading === 'addgroup',\n        error: state.group.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addGroup: bindActionCreators(addGroupAction, dispatch),\n        fetchAllGroups: bindActionCreators(fetchAllGroupsAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupContainerComponent)","import React, { Component } from 'react'\nimport { List, Card, Button, Grid, Label } from 'semantic-ui-react';\n\nclass ContactComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        console.log('contact component', this.props.contact)\n        //this.props.history.push(`/editcontact/${this.props.contact._id}`)\n        this.props.history.push({\n            pathname: `/editcontact/${this.props.contact._id}`,\n            state: { data: this.props.contact}\n          })\n    }\n    onDelete = event => {\n        event.preventDefault()\n    }\n    render() {\n        let { id, name, email, phone, job, active } = this.props.contact\n        return (\n            <List.Item key={id} >\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header >\n                            {name}\n                            <Label circular empty \n                                color={active ? 'green' : 'grey'} \n                                style={{marginLeft:'0.5em'}}/>\n                        </Card.Header>\n                        <Grid columns={2} >\n                            <Grid.Row>\n                                <Grid.Column width='13'>\n                                    <div>{job}</div>\n                                    <div>{email}</div>\n                                    <div>{phone}</div>\n                                </Grid.Column>\n                                <Grid.Column width='3'>\n                                    <div>\n                                        <Button icon='pencil' size='tiny' circular \n                                            onClick={this.onEdit} />\n                                        <Button icon='delete' size='tiny' circular color='yellow'\n                                            onClick={this.onDelete} />\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nexport default ContactComponent","import React, { Component } from 'react'\nimport { List, Segment, Header, Grid, Input, Icon, Select, Button, Pagination } from 'semantic-ui-react';\nimport ContactComponent from './contact';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { fetchCachedGroupItemsAction } from '../../actions/group'\n\nclass ContactContainerComponent extends Component {\n    state = {\n        activePage: 1,\n        totalPages: 5,\n        searchString: '',\n        searchBy: 'name',\n        sortBy: 'name'\n    }\n\n    handlePaginationChange = (e, { activePage }) => {\n        this.setState({ activePage })\n    }\n\n    onSearch = () => {\n\n    }\n\n    onSort = () => {\n\n    }\n\n    onChangeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    async componentDidMount() {\n        let selectedGroup = this.props.match.params.group || '00000'\n        await this.props.fetchAllGroups({groupid: selectedGroup})\n    }\n    render() {\n        let selectedGroup = this.props.selectedGroup// this.props.match.params.group || 'All Contacts'\n        let contactList = null\n        let groupname = ''\n        if(selectedGroup) {\n            contactList = selectedGroup.contacts\n            groupname = selectedGroup.name\n        }\n        const options = [\n                            { key: 'name', text: 'name', value: 'name' },\n                            { key: 'email', text: 'email', value: 'email' },\n                            { key: 'phone', text: 'phone', value: 'phone' },\n        ]\n        const pageSizeOptions = [\n            { key: '10', text: '10', value: '10' },\n            { key: '15', text: '15', value: '15' },\n            { key: '20', text: '20', value: '20' },\n        ]\n        return (\n            <div>\n                <Segment>\n                    <Grid columns={3}>\n                        <Grid.Column width={4}>\n                            <Header color='yellow' >\n                                <Icon name='address card' />\n                                <Header.Content>{groupname}</Header.Content>\n                            </Header>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Input type='text' placeholder='Search contact ...'>\n                                <input />\n                                <Select compact options={options} defaultValue='name' />\n                                <Button icon='search' compact />\n                            </Input>\n                        </Grid.Column>\n                        <Grid.Column width={3} align='right'>\n                            <Input >\n                                <Select compact options={options} defaultValue='name' />\n                                <Button compact icon='sort'/>\n                            </Input>\n                        </Grid.Column>\n                    </Grid>\n                    {    contactList && \n                        <List selection> \n                            { \n                                contactList.map(c => <ContactComponent key={c.email} contact={c} {...this.props}/>)\n                            }\n                        </List>\n                    }\n                    \n                </Segment>\n                <Segment>\n                    <Pagination pointing secondary\n                        activePage={this.state.activePage}\n                        onPageChange={this.handlePaginationChange}\n                        totalPages={this.state.totalPages}\n                    />\n                    <Input>\n                        <Select name='pagesize' compact\n                            style={{marginLeft:'1em'}} \n                            options={pageSizeOptions} \n                            defaultValue='10' />\n                        <Button disabled>Page Size</Button>\n                    </Input>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectedGroup: state.group.selectedGroup,\n        error: state.group.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchAllGroups: bindActionCreators(fetchCachedGroupItemsAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactContainerComponent)","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport GroupContainerComponent from './group/groupContainer';\nimport ContactContainerComponent from './contact/contactContainer';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <Grid stretched>\n                <Grid.Column width={6}>\n                    <GroupContainerComponent {...this.props}/>\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <ContactContainerComponent {...this.props}/>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, {Component} from 'react'\nimport { Input, Button, Modal, Divider, Checkbox, Header } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { fetchCachedGroupAction, editGroupAction } from '../../actions/group';\n\nclass EditGroupComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            group:'',\n            active: false,\n            open: true,\n        }\n    }\n\n    async componentDidMount() {\n        await this.props.fetchCachedGroup({groupid: this.props.match.params.id})\n        this.setState({group: this.props.dirtyGroup.name, active: this.props.dirtyGroup.active})\n    }\n    onChangeHandler = (e) => {\n        e.preventDefault()\n        this.setState({[e.target.name]: e.target.value})\n    }\n    onCheckedChange = (name) => {\n        this.setState({[name]: !this.state[name]})\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        let options = { \n                        groupid: this.props.dirtyGroup.id, \n                        name: this.state.group }\n        if(this.state.active !== this.props.dirtyGroup.active) {\n            options.active = this.state.active\n        }\n        console.log('on edit group', options)\n        await this.props.editGroup(options)\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    render() {\n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true} >\n                <Header color='orange' style={{background:'orange'}}>Group Information</Header>\n                <Modal.Content>\n                    <Input name=\"group\" fluid placeholder='Enter group' style={{marginTop: '0.5em'}}\n                        icon='group' iconPosition='left' \n                        onChange={this.onChangeHandler} \n                        value={ this.state.group }/>\n                    <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                        label={ this.state.active ? 'deactivate' : 'activate'}\n                        checked = { this.state.active }\n                        onChange={ e => this.onCheckedChange('active')} />\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' color='orange' \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        dirtyGroup: state.group.dirtyGroup,\n        loading: state.group.loading,\n        error: state.group.error\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCachedGroup: bindActionCreators(fetchCachedGroupAction, dispatch),\n        editGroup: bindActionCreators(editGroupAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupComponent)","const constants = {\r\n    AddContact: 'AddContact',\r\n    AddContact_Success: 'AddContact_Success',\r\n    AddContact_Failure: 'AddContact_Failure',\r\n\r\n    RemoveContact: 'RemoveContact',\r\n    RemoveContact_Success: 'RemoveContact_Success',\r\n    RemoveContact_Failure: 'RemoveContact_Failure',\r\n\r\n    EditContact: 'EditContact',\r\n    EditContact_Success: 'EditContact_Success',\r\n    EditContact_Failure: 'EditContact_Failure',\r\n\r\n    FetchContact: 'FetchContact',\r\n    FetchContact_Success: 'FetchContact_Success',\r\n    FetchContact_Failure: 'FetchContact_Failure',\r\n\r\n    ChangeActive_Contact: 'ChangeActive_Contact',\r\n    ChangeActive_Contact_Success: 'ChangeActive_Contact_Success',\r\n    ChangeActive_Contact_Failure: 'ChangeActive_Contact_Failure',\r\n}\r\n\r\nexport default { ...constants }","import constants from '../constants/contact'\nimport { proxy, handleError, getConfig } from '../api/api'\n\nconst { AddContact, AddContact_Success, AddContact_Failure,\n        EditContact, EditContact_Success, EditContact_Failure,\n        RemoveContact, RemoveContact_Failure, RemoveContact_Success } = constants\n\nexport const addContactAction = function ({ name, phone, email, job, group, active }) {\n    const config = getConfig();\n    console.log(name, phone, email, job, group, active)\n    const request = proxy.post('contacts/add', { name, phone, email, job, group, active }, config)\n    return async (dispatch) => {\n        dispatch(addContactStarted())\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            console.log('addContactAction', contact)\n            if(contact === null) {\n                dispatch(addContactFailed(message))\n            } else {\n                dispatch(addContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(addContactFailed(errorMessage))\n        }\n    }\n    function addContactStarted() { return { type: AddContact, payload: {error: '', success: false, loading: true} } }\n    function addContactSucceded(contact) { return { type: AddContact_Success, payload: { contact, loading: false, success: true } } }\n    function addContactFailed(error) { return { type: AddContact_Failure, payload: { error, loading: false} }}\n}\n\nexport const editContactAction = function ({ id, name, email, job, active, phone, group }) {\n    const config = getConfig();\n    const request = proxy.put(`contacts/${id}`, { name, email, job, active, phone, group }, config)\n    return async (dispatch) => {\n        dispatch(editContactStarted(id))\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            console.log('editContactAction', contact)\n            if(contact === null) {\n                dispatch(editContactFailed(message))\n            } else {\n                dispatch(editContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(editContactFailed(errorMessage))\n        }\n    }\n    function editContactStarted(id) { return { type: EditContact, payload: {error: '', success: false, loading: id} } }\n    function editContactSucceded(contact) { return { type: EditContact_Success, payload: { contact, loading: false, success: true } } }\n    function editContactFailed(error) { return { type: EditContact_Failure, payload: { error, loading: false} }}\n}\n\nexport const removeContactAction = function (id) {\n    const config = getConfig();\n    const request = proxy.delete(`contacts/${id}`, config)\n    return async (dispatch) => {\n        dispatch(deleteContactStarted(id))\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            console.log('editContactAction', contact)\n            if(contact === null) {\n                dispatch(deleteContactFailed(message))\n            } else {\n                dispatch(deleteContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(deleteContactFailed(errorMessage))\n        }\n    }\n    function deleteContactStarted(id) { return { type: RemoveContact, payload: {error: '', success: false, loading: id} } }\n    function deleteContactSucceded(contact) { return { type: RemoveContact_Success, payload: { contact, loading: '', success: true } } }\n    function deleteContactFailed(error) { return { type: RemoveContact_Failure, payload: { error, loading: ''} }}\n}","import React, {Component} from 'react'\nimport { Input, Button, Modal, Divider, Checkbox, Header, Select } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { addContactAction, editContactAction } from '../../actions/contact';\n\nclass EditContactComponent extends Component {\n    constructor(props){\n        super(props)\n        let contact = {} \n        if(this.props.match.params.id) {\n            contact = this.props.location.state.data\n        }\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: contact.name || '',\n            job: contact.job || '',\n            phone: contact.phone || '',\n            email: contact.email || '',\n            group: contact.group || '',\n            groupoptions: [],\n            active: contact.active || true,\n            open: true,\n        }\n    }\n\n    async componentDidMount() {\n        let groups = this.props.groups || []\n        let options = []\n        \n        if(groups.length > 0) {\n            let defaultGroup = ''\n            groups.forEach(g => {\n                options.push({key: g.id, text: g.name, value: g.name})\n            })\n            if(this.state.id) {\n                //we are editing existing contact\n                defaultGroup = this.state.group\n            } else {\n                defaultGroup = options[0].text\n            }\n            this.setState({group: defaultGroup})\n        }\n        this.setState({groupoptions: options})\n        if(this.state.id) {\n            //fetch cached contact detail\n        }\n    }\n\n    onSelectionChange = ({name, value}) => {\n        this.setState({[name]: value})\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        let { id, name, phone, email, job, group, active, groupoptions } = this.state\n        console.log('on edit submit', this.state)\n        let groupid = groupoptions.find(o => o.text === group).key\n        this.state.id ? \n            await this.props.editContact({id, name, phone, email, job, group: groupid, active}) :\n            await this.props.addContact({ name, phone, email, job, group:groupid, active})\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    onCheckedChange = (name) => {\n        this.setState({[name]: !this.state[name]})\n    }\n\n    render() {\n        \n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true}>\n                <Header color='orange' style={{background:'orange'}}>Contact Information</Header>\n                <Modal.Content>\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\n                        value = {this.state.name}\n                        onChange={this.onChangeHandler} icon='user' iconPosition='left' />\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\n                        value = {this.state.email}\n                        onChange={this.onChangeHandler} icon='at' iconPosition='left' \n                        label='@inmar.com' labelPosition='right' />\n                    <Input name=\"phone\" fluid placeholder='Enter phone' style={{marginTop: '0.5em'}}\n                        value = {this.state.phone}\n                        onChange={this.onChangeHandler} icon='phone' iconPosition='left' />\n                    <Input name=\"job\" fluid placeholder='Enter job role' style={{marginTop: '0.5em'}}\n                        value = {this.state.job}\n                        onChange={this.onChangeHandler} icon='info' iconPosition='left' />\n                    <Input fluid style={{marginTop:'0.5em'}} onChange={this.onChangeHandler}>\n                        <Select name = 'group' compact fluid options={this.state.groupoptions || []} selection\n                            value = { this.state.group }\n                            onChange={event => this.onSelectionChange({name: 'group', value: event.target.textContent })} />\n                        <Button disabled>Group</Button>\n                    </Input>\n                    {   \n                        //display active/inactive checkbox when editing existing contact\n                        this.state.id && \n                        <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                            label={ this.state.active ? 'deactivate' : 'activate'}\n                            checked = { this.state.active }\n                            onChange={ e => this.onCheckedChange('active')} />\n                    }\n\n                    {//display error information\n                        this.props.error && <span style={{color:'red'}}>{this.props.error}</span>\n                    }\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' primary \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' secondary onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToPrps(state) {\n    console.log('editContact', state)\n    return {\n        contact: state.currentContact,\n        groups: state.group.groups,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addContact: bindActionCreators(addContactAction, dispatch),\n        editContact: bindActionCreators(editContactAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToPrps, mapDispatchToProps)(EditContactComponent)","import React, {Component} from 'react'\r\nimport { Segment, Grid, Header, Button, Icon } from 'semantic-ui-react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass HeaderComponent extends Component {\r\n    \r\n    onAddContact = event => {\r\n        event.preventDefault()\r\n        this.props.history.push('/addcontact')\r\n    }\r\n    onLogout = event => {\r\n        event.preventDefault()\r\n        sessionStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        let user = sessionStorage.getItem('name')\r\n        return (\r\n                    <Segment inverted color='yellow'>\r\n                        <Grid>\r\n                            <Grid.Column width={12}>\r\n                                <Header as='h2' color='orange'>\r\n                                    <Icon name='address book' />\r\n                                    <Header.Content>\r\n                                        Contact Manager\r\n                                    <Header.Subheader>{`Hi, ${user}`}</Header.Subheader>\r\n                                    </Header.Content>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width='4'>\r\n                                <Button icon='plus' compact circular content='Add Contact' \r\n                                    onClick={this.onAddContact}></Button>\r\n                                <Button icon='lock' compact circular content='Logout' \r\n                                    onClick={this.onLogout}></Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Segment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(HeaderComponent)","import React, { Component } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport PrivateRoute from './privateroute'\nimport register from '../user/register';\nimport login from '../user/login';\nimport Dashboard from '../dashboard'\nimport EditGroupComponent from '../group/editGroup'\nimport EditContactComponent from '../contact/editContact'\nimport { fetchDomainAction } from '../../actions/auth'\nimport HeaderComponent from '../header'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nclass App extends Component {\n  componentDidMount = async () => {\n    //console.log('in app loading')\n    await this.props.fetchDomain()\n  }\n  render() {\n    return (\n          <BrowserRouter>\n            <Container>\n              <HeaderComponent />\n              <Switch>\n                <Route exact path=\"/\" component={login}/>\n                <Route exact path=\"/Login\" component={login}/>\n                <Route exact path=\"/Register\" component={register}/>\n                { /* below all will be protected routes*/ }\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/dashboard/:group\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/editgroup/:id\" component={EditGroupComponent}/>\n                <PrivateRoute exact path=\"/addcontact\" component={EditContactComponent}/>\n                <PrivateRoute exact path=\"/editcontact/:id\" component={EditContactComponent}/>\n              </Switch>\n            </Container>\n          </BrowserRouter>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchDomain: bindActionCreators(fetchDomainAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import globals from '../constants/auth'\r\n\r\nlet initialState = {\r\n    domain: '',\r\n    user: '',\r\n    token: '',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case globals.LOGIN:\r\n        case globals.LOGIN_FAILED:\r\n        case globals.LOGIN_SUCCEDED:\r\n        case globals.REGISTER:\r\n        case globals.REGISTER_FAILED:\r\n        case globals.REGISTER_SUCCEDED:\r\n        case globals.FETCHDOMAIN:\r\n        case globals.FETCHDOMAIN_SUCCEDED:\r\n        case globals.FETCHDOMAIN_FAILED:\r\n            return { ...state, ...action.payload }\r\n        default:\r\n            return { ...state}\r\n    }\r\n}\r\n\r\nexport default authReducer","import globals from '../constants/contact'\r\n\r\nlet initialState = {\r\n    contact: {},\r\n    key:'',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: '',\r\n    success: false,\r\n}\r\n\r\nconst contactReducer = (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case globals.AddContact:\r\n        case globals.AddContact_Failure:\r\n        case globals.AddContact_Success:\r\n        case globals.EditContact:\r\n        case globals.EditContact_Failure:\r\n        case globals.EditContact_Success:\r\n        case globals.RemoveContact:\r\n        case globals.RemoveContact_Failure:\r\n        case globals.RemoveContact_Success:\r\n        case globals.FetchContact_Success:\r\n        case globals.FetchContact:\r\n        case globals.FetchContact_Failure:\r\n            return { ...state, ...action.payload}\r\n        default: \r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default contactReducer","import globals from '../constants/group'\n\nlet initialState = {\n    groups: [/* list of groups and underneath contact list*/],\n    selectedGroup: null,\n    loading: false,\n    error: '',\n    errorMessage: '',\n    success: false,\n}\n\nconst groupReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case globals.EditGroup:\n        case globals.EditGroup_Failure:\n        case globals.EditGroup_Success:\n        case globals.RemoveGroup:\n        case globals.RemoveGroup_Failure:\n        case globals.AddGroup:\n        case globals.AddGroup_Failure:\n        case globals.FetchGroupList:\n        case globals.FetchGroupList_Failure:\n            return { ...state, ...action.payload}\n        case globals.AddGroup_Success:\n            return { ...state, groups: [...state.groups, action.payload.group], ...action.payload} \n        case globals.RemoveGroup_Success:\n            //removed all contacts with the group id\n            let filtered = state.groups.filter(group => group.id !== action.payload.group.id)\n            return { ...state, groups: filtered, ...action.payload}\n        case globals.FetchCachedGroup:\n            let dirtyGroup = state.groups.find(g => g.id === action.payload.groupid)\n            return { ...state, dirtyGroup }\n        case globals.FetchCachedGroupNames:\n            return { ...state, groupNames: state.groups }\n        case globals.FetchCachedGroupItems:\n            let selectedGroup = {\n                id: '00000',\n                name: 'All Contacts',\n                active: true,\n                total: 0,\n                contacts: []\n            }\n            if(action.payload.groupid === '00000') {\n                //we want all contacts to be displayed\n                state.groups.forEach(g => {\n                    if(g.total > 0) \n                        selectedGroup.contacts.push(...g.contacts)\n                })\n            } else {\n                //selective group\n                selectedGroup = state.groups.find(g => g.id === action.payload.groupid)\n            }\n            return { ...state, selectedGroup}\n        \n        case globals.FetchGroupList_Success:\n            \n            let allGroups = {\n                id: '00000',\n                name: 'All Contacts',\n                active: true,\n                total: 0,\n                contacts: []\n            }\n            //we want all contacts to be displayed at initial rendering\n            if(action.payload.groups) {\n                action.payload.groups.forEach(g => {\n                    if(g.total > 0) \n                        allGroups.contacts.push(...g.contacts)\n                })\n            }\n            return { ...state, selectedGroup: allGroups, ...action.payload}\n        default: \n            return { ...state }\n    }\n}\n\nexport default groupReducer","import authReducer from './authReducer'\r\nimport contactReducer from './contactReducer'\r\nimport groupReducer from './groupReducer'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    contact: contactReducer,\r\n    group: groupReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/index'\r\n\r\n//create store\r\nconst store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(\r\n        thunk\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}