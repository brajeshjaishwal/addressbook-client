{"version":3,"sources":["components/app/privateroute.js","constants/auth.js","api/api.js","actions/auth.js","components/user/register.js","components/user/login.js","constants/group.js","actions/group.js","components/group/group.js","components/group/groupContainer.js","constants/contact.js","actions/contact.js","components/contact/contact.js","components/contact/contactContainer.js","components/dashboard.js","components/group/editGroup.js","components/contact/editContact.js","components/header.js","components/app/app.js","serviceWorker.js","reducers/authReducer.js","reducers/contactReducer.js","reducers/groupReducer.js","reducers/index.js","store/store.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","sessionStorage","getItem","Redirect","to","pathname","state","from","location","constants","LOGIN","LOGIN_SUCCEDED","LOGIN_FAILED","REGISTER","REGISTER_SUCCEDED","REGISTER_FAILED","FETCHDOMAIN","FETCHDOMAIN_SUCCEDED","FETCHDOMAIN_FAILED","proxy","axios","create","baseURL","getConfig","headers","auth","handleError","error","errorMessage","response","console","log","data","message","request","config","registerUserAction","name","email","phone","password","post","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","resp","_ref3","wrap","_context","prev","next","type","payload","loading","sent","undefined","registerFailed","registered","t0","stop","this","_x","apply","arguments","loginUserAction","_ref4","_ref5","_callee2","_ref6","user","token","_context2","setItem","loginFailed","loginSucceded","_x2","fetchDomainAction","_ref7","_callee3","_ref8","domain","_context3","get","fetchDomainFailed","fetchDomainSucceded","_x3","oneCapitalLetter","RegExp","oneNumber","oneSpecialLetter","min8Length","RegisterComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","e","tempValue","target","value","setState","defineProperty","test","passwordError","tempEmail","validator","isEmail","emailError","isNumeric","length","phoneError","nameError","onSubmitHandler","event","_this$state","preventDefault","alert","abrupt","registerUser","open","Modal","size","closeOnEscape","closeOnDimmerClick","Header","Content","Input","fluid","placeholder","style","marginTop","onChange","icon","color","label","labelPosition","href","Divider","Button","primary","onClick","register","Message","connect","bindActionCreators","LoginComponent","loginUser","history","push","login","constants_group","objectSpread","AddGroup","AddGroup_Success","AddGroup_Failure","RemoveGroup","RemoveGroup_Success","RemoveGroup_Failure","RemoveContactFromCachedItems","EditGroup","EditGroup_Success","EditGroup_Failure","FetchCachedGroup","FetchCachedGroupNames","FetchCachedGroupItems","FetchGroupList","FetchGroupList_Success","FetchGroupList_Failure","ChangeActive_Group","ChangeActive_Group_Success","ChangeActive_Group_Failure","addGroupAction","group","success","addGroupFailed","addGroupSucceded","deleteGroupAction","groupid","delete","concat","deleteGroupStarted","deleteGroupFailed","deleteGroupSucceded","editGroupAction","active","put","_ref9","editGroupFailed","editGroupSucceded","fetchAllGroupsAction","_ref10","_callee4","result","_context4","groups","fetchGroupsFailed","_x4","fetchCachedGroupAction","_ref11","fetchCachedGroupItemsAction","_ref12","removeContactFromCachedItems","_ref13","contactid","GroupComponent","onEdit","id","onDelete","removeGroup","onSelect","fetchGroup","_this$props$group","total","selectedGroup","editable","List","Item","key","Card","Grid","columns","Row","Column","textAlign","Link","Label","circular","marginLeft","GroupContainerComponent","newgroup","onSearchChange","onAddGroup","addGroup","fetchAllGroups","_this2","allcontacts","forEach","g","contacts","Segment","Icon","align","compact","map","group_group","deletedContact","contact","constants_contact","AddContact","AddContact_Success","AddContact_Failure","RemoveContact","RemoveContact_Success","RemoveContact_Failure","EditContact","EditContact_Success","EditContact_Failure","FetchContact","FetchContact_Success","FetchContact_Failure","ChangeActive_Contact","ChangeActive_Contact_Success","ChangeActive_Contact_Failure","addContactAction","job","addContactFailed","addContactSucceded","editContactAction","editContactStarted","editContactFailed","editContactSucceded","removeContactAction","deleteContactFailed","deleteContactSucceded","ContactComponent","_id","removeContact","removeItemFromGroup","_this$props$contact","content","ContactContainerComponent","activePage","totalPages","searchString","searchBy","sortBy","dosort","dosearch","sortOptions","text","searchOptions","pagesize","pageSizeOptions","handlePaginationChange","onSearch","onSort","onSelectionChange","match","params","contactList","groupname","pageCount","toConsumableArray","ss","toUpperCase","filter","c","includes","sort","b","ps","parseInt","Math","ceil","pn","startIndex","endIndex","slice","width","Select","options","defaultValue","textContent","disabled","selection","contact_contact","Pagination","pointing","secondary","onPageChange","Dashboard","stretched","groupContainer","contactContainer","EditGroupComponent","onCheckedChange","dirtyGroup","editGroup","onExit","fetchCachedGroup","background","iconPosition","Checkbox","toggle","checked","Group","Or","EditContactComponent","groupoptions","find","o","editContact","addContact","replace","defaultGroup","currentContact","HeaderComponent","onAddContact","onLogout","clear","inverted","as","Subheader","withRouter","App","componentDidMount","fetchDomain","BrowserRouter","Container","header","Switch","exact","path","Boolean","window","hostname","initialState","authReducer","action","globals","contactReducer","groupReducer","filtered","groupNames","_selectedGroup$contac","allGroups","_allGroups$contacts","_action$payload","tempGroup","currentContacts","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0UAGe,SAASA,EAATC,GAAyD,IAAtBC,EAAsBD,EAAjCE,UAAyBC,EAAQC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,eACpE,OAAOM,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,GAAWP,EAAX,CAAiBQ,OAAQ,SAAAC,GAAK,OACDC,eAAeC,QAAQ,SACjBR,EAAAC,EAAAC,cAACP,EAAcW,GACfN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEC,KAAMP,EAAMQ,0FCOxFC,EAdG,CACdC,MAAO,QACPC,eAAgB,iBAChBC,aAAc,eAEdC,SAAU,WACVC,kBAAmB,oBACnBC,gBAAiB,kBAEjBC,YAAa,cACbC,qBAAsB,uBACtBC,mBAAoB,+BCTXC,SAAQC,EAAMC,OAAO,CAC9BC,QACQ,+CAGL,SAASC,IACZ,MAAO,CAAEC,QAAS,CAACC,KAAQxB,eAAeC,QAAQ,WAG/C,IAAMwB,EAAc,SAAAC,GACvB,IAAIC,EAAe,GAqBnB,OApBID,EAAME,UAGNC,QAAQC,IAAIJ,EAAME,UAClBD,EAAeD,EAAME,SAASG,KAAKC,SAG5BN,EAAMO,SAKbJ,QAAQC,IAAIJ,EAAMO,SAClBN,EAAe,kBAGfE,QAAQC,IAAI,QAASJ,EAAMM,SAC3BL,EAAeD,EAAMM,SAEzBH,QAAQC,IAAIJ,EAAMQ,QACXP,GC9BHf,EAGIJ,EAHJI,SAAUE,EAGNN,EAHMM,gBAAiBD,EAGvBL,EAHuBK,kBAC3BJ,EAEID,EAFJC,MAAOC,EAEHF,EAFGE,eAAgBC,EAEnBH,EAFmBG,aACvBI,EACIP,EADJO,YAAaC,EACTR,EADSQ,qBAAsBC,EAC/BT,EAD+BS,mBAG9BkB,EAAqB,SAAAhD,GAA0C,IAA/BiD,EAA+BjD,EAA/BiD,KAAMC,EAAyBlD,EAAzBkD,MAAOC,EAAkBnD,EAAlBmD,MAAOC,EAAWpD,EAAXoD,SACvDN,EAAUf,EAAMsB,KAAK,iBAAkB,CAACJ,OAAMC,QAAOC,QAAOC,aAClE,sBAAAE,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAhB,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHN,EAagC,CAAEO,KAAMzC,EAAW0C,QAAS,CAAE5B,OAAO,EAAO6B,SAAS,KAdlFL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLG,EAAAM,KAAAN,EAAAE,KAAA,EAIuBL,EAAKhB,KAJ5B,OAAAiB,EAAAE,EAAAM,KAIMxB,EAJNgB,EAIMhB,QAEDc,OADWW,IAAZzB,EACU0B,EAAe1B,GASC,CAAEqB,KAAMxC,EAAmByC,QAAS,CAAEK,YAAY,EAAMJ,SAAS,KAf/FL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAUKvB,EAAeF,EAAWyB,EAAAU,IAC9Bd,EAASY,EAAe/B,IAXzB,yBAAAuB,EAAAW,SAAAhB,EAAAiB,KAAA,aAAP,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GAgBA,SAASP,EAAehC,GAAS,MAAO,CAAE2B,KAAMvC,EAAiBwC,QAAS,CAAE5B,QAAO6B,SAAS,MAGnFW,EAAkB,SAAAC,GAAuB,IAArB9B,EAAqB8B,EAArB9B,MAAOE,EAAc4B,EAAd5B,SACpC,sBAAA6B,EAAA7E,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAyB,EAAOvB,GAAP,IAAAC,EAAAuB,EAAAC,EAAAC,EAAAxC,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACHN,EAiB6B,CAAEO,KAAM5C,EAAO6C,QAAS,CAAE5B,OAAO,EAAO6B,SAAS,KAlB3EkB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAGkBlC,EAAMsB,KAAK,cAAe,CAACH,QAAOE,aAHpD,cAGKQ,EAHL0B,EAAAjB,KAAAiB,EAAArB,KAAA,EAIqCL,EAAKhB,KAJ1C,OAAAuC,EAAAG,EAAAjB,KAIMe,EAJND,EAIMC,KAAMC,EAJZF,EAIYE,MAAOxC,EAJnBsC,EAImBtC,QACfuC,GAAiB,KAATA,QAAwBd,IAATc,GACtBvE,eAAe0E,QAAQ,OAAQH,EAAKnC,MACrCoC,GAAmB,KAAVA,QAA0Bf,IAAVe,GACxBxE,eAAe0E,QAAQ,QAASF,GAEhC1B,EADQ,OAATyB,QAA0Bd,IAATc,QAAgCd,IAAVe,EAC7BG,EAAY3C,GAEZ4C,EAAcL,IAZ5BE,EAAArB,KAAA,iBAAAqB,EAAAtB,KAAA,GAAAsB,EAAAb,GAAAa,EAAA,SAcK9C,EAAeF,EAAWgD,EAAAb,IAC9Bd,EAAS6B,EAAYhD,IAftB,yBAAA8C,EAAAZ,SAAAQ,EAAAP,KAAA,aAAP,gBAAAe,GAAA,OAAAT,EAAAJ,MAAAF,KAAAG,YAAA,GAmBA,SAASW,EAAcL,GAAQ,MAAO,CAAElB,KAAM3C,EAAgB4C,QAAS,CAAEiB,OAAMhB,SAAS,IACxF,SAASoB,EAAYjD,GAAS,MAAO,CAAE2B,KAAM1C,EAAc2C,QAAS,CAACC,SAAS,EAAO7B,YAG5EoD,EAAoB,WAC7B,sBAAAC,EAAAxF,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAoC,EAAOlC,GAAP,IAAAC,EAAAkC,EAAAC,EAAAlD,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cACHN,EAemC,CAAEO,KAAMtC,EAAauC,QAAS,CAAE5B,OAAO,EAAO6B,SAAS,KAhBvF4B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAGkBlC,EAAMkE,IAAI,UAH5B,cAGKrC,EAHLoC,EAAA3B,KAAA2B,EAAA/B,KAAA,EAIiCL,EAAKhB,KAJtC,OAAAkD,EAAAE,EAAA3B,KAIO0B,EAJPD,EAIOC,OAAQlD,EAJfiD,EAIejD,QACA,OAAXkD,QAA8BzB,IAAXyB,QAAmCzB,IAAXyB,EAC1CpC,EAASuC,EAAkBrD,KAE3BhC,eAAe0E,QAAQ,SAAUQ,GACjCpC,EAASwC,EAAoBJ,KATlCC,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAvB,GAAAuB,EAAA,SAYKxD,EAAeF,EAAW0D,EAAAvB,IAC9Bd,EAASuC,EAAkB1D,IAb5B,yBAAAwD,EAAAtB,SAAAmB,EAAAlB,KAAA,aAAP,gBAAAyB,GAAA,OAAAR,EAAAf,MAAAF,KAAAG,YAAA,GAiBA,SAASqB,EAAoBJ,GAAU,MAAO,CAAE7B,KAAMrC,EAAsBsC,QAAS,CAAE4B,SAAQ3B,SAAS,IACxG,SAAS8B,EAAkB3D,GAAS,MAAO,CAAE2B,KAAMpC,EAAoBqC,QAAS,CAACC,SAAS,EAAO7B,6BChE/F8D,EAAmB,IAAIC,OAAO,gBAC9BC,EAAY,IAAID,OAAO,gBACvBE,EAAmB,IAAIF,OAAO,qBAC9BG,EAAa,IAAIH,OAAO,cAGxBI,cACF,SAAAA,EAAY9F,GAAM,IAAA+F,EAAA,OAAAvG,OAAAwG,EAAA,EAAAxG,CAAAuE,KAAA+B,IACdC,EAAAvG,OAAAyG,EAAA,EAAAzG,CAAAuE,KAAAvE,OAAA0G,EAAA,EAAA1G,CAAAsG,GAAAK,KAAApC,KAAM/D,KAcVoG,gBAAkB,SAACC,GACf,IAAIC,EAAYD,EAAEE,OAAOC,MAEzB,GADAT,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOiE,IACX,aAAlBD,EAAEE,OAAOlE,KAAqB,CAC7B,IAAIV,EAAQ,GACRkE,EAAWc,KAAKL,KAChB3E,GAAS,gBAETiE,EAAiBe,KAAKL,KACtB3E,GAAS,uBAETgE,EAAUgB,KAAKL,KACf3E,GAAS,YAET8D,EAAiBkB,KAAKL,KACtB3E,GAAS,kBAEboE,EAAKU,SAAS,CAACG,cAAejF,SAC3B,GAAqB,UAAlB0E,EAAEE,OAAOlE,KAAkB,CACjC,IAAIwE,EAAYP,EAAYP,EAAK/F,MAAMmF,OACnCxD,EAAQ,GACT2E,IAAcQ,IAAUC,QAAQF,KAC/BlF,EAAQ,mBAEZoE,EAAKU,SAAS,CAACO,WAAYrF,SACxB,GAAqB,UAAlB0E,EAAEE,OAAOlE,KAAkB,CACjC,IAAIV,EAAQ,GACT2E,KAAeQ,IAAUG,UAAUX,IAAcA,EAAUY,OAAS,MACnEvF,EAAQ,0BAEZoE,EAAKU,SAAS,CAACU,WAAYxF,SACxB,GAAqB,SAAlB0E,EAAEE,OAAOlE,KAAiB,CAChC,IAAIV,EAAQ,GACK,OAAd2E,QAAoC5C,IAAd4C,GAAyC,KAAdA,IAChD3E,EAAQ,0BAEZoE,EAAKU,SAAS,CAACW,UAAWzF,MAnDhBoE,EAuDlBsB,gBAvDkB,eAAAjI,EAAAI,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAuDA,SAAAC,EAAOwE,GAAP,IAAAC,EAAAlF,EAAAC,EAAAC,EAAAC,EAAA,OAAAI,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdiE,EAAME,mBACFzB,EAAKzF,MAAM0G,YAAcjB,EAAKzF,MAAMsG,eAAiBb,EAAKzF,MAAM6G,aAC/DpB,EAAKzF,MAAM+B,MAAS0D,EAAKzF,MAAMkC,UAAauD,EAAKzF,MAAMiC,OAAUwD,EAAKzF,MAAMgC,MAHnE,CAAAa,EAAAE,KAAA,eAKVoE,MAAM,+BALItE,EAAAuE,OAAA,wBAAAH,EASuBxB,EAAKzF,MAArC+B,EATSkF,EASTlF,KAAMC,EATGiF,EASHjF,MAAOC,EATJgF,EASIhF,MAAOC,EATX+E,EASW/E,SATXW,EAAAE,KAAA,EAUR0C,EAAK/F,MAAM2H,aAAa,CAACtF,OAAMC,QAAOC,QAAOC,aAVrC,wBAAAW,EAAAW,SAAAhB,EAAAiB,SAvDA,gBAAAC,GAAA,OAAA5E,EAAA6E,MAAAF,KAAAG,YAAA,GAEd6B,EAAKzF,MAAQ,CACT+B,KAAM,GACNC,MAAO,GACPC,MAAM,GACNC,SAAU,GACVoF,MAAM,EACNhB,cAAe,wDACfI,WAAY,GACZG,WAAY,GACZC,UAAW,IAXDrB,wEAqEd,IAAInC,EAAaG,KAAK/D,MAAM4D,aAAc,EAC1C,OACIlE,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,KAAK,OAAOF,KAAM7D,KAAKzD,MAAMsH,KAAMG,eAAe,EAAOC,oBAAoB,GAChFtI,EAAAC,EAAAC,cAACiI,EAAA,EAAMI,OAAP,yBACAvI,EAAAC,EAAAC,cAACiI,EAAA,EAAMK,QAAP,KACIxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,OAAO+F,OAAK,EAACC,YAAY,aAAaC,MAAO,CAACC,UAAW,SACjEC,SAAUzE,KAAKqC,gBAAiBqC,KAAK,SACvC1E,KAAKzD,MAAM8G,WAAa1H,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM8G,WAElE1H,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,cAAcC,MAAO,CAACC,UAAW,SACnEC,SAAUzE,KAAKqC,gBAAiBuC,MAAQ,aAAaC,cAAc,UACrE7E,KAAKzD,MAAM0G,YAActH,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM0G,YAEnEtH,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,qBAAqBC,MAAO,CAACC,UAAW,SAC1EC,SAAUzE,KAAKqC,gBAAiBqC,KAAK,UACvC1E,KAAKzD,MAAM6G,YAAczH,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM6G,YAEnEzH,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,WAAWiB,KAAK,WAAW8E,OAAK,EAACC,YAAY,iBACrDI,KAAK,MAAMH,MAAO,CAACC,UAAW,SAC9BC,SAAUzE,KAAKqC,kBACjBrC,KAAKzD,MAAMsG,eAAiBlH,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAMsG,eAEpE7C,KAAK/D,MAAM2B,OAASjC,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAK/D,MAAM2B,OAC5DiC,GAAclE,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,UAApB,kCAA6DhJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,UAAR,SAA7D,gBAChBnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,MACApJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,WAAW2G,SAAO,EAACZ,OAAK,EACjCa,QAAWlF,KAAKsD,gBAChB7D,QAAWO,KAAK/D,MAAMwD,SAAWO,KAAKzD,MAAM4I,UAFhD,aAIJxJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,wBACoBzJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,UAAR,kBApGJxJ,aAyHjB+J,mBAdf,SAAyB9I,GACrB,MAAO,CACHqB,MAAOrB,EAAMmB,KAAKE,MAClB6B,QAASlD,EAAMmB,KAAK+B,QACpB2B,OAAQ7E,EAAMmB,KAAK0D,OACnBvB,WAAYtD,EAAMmB,KAAKmC,aAG/B,SAA4Bb,GACxB,MAAO,CACH4E,aAAc0B,YAAmBjH,EAAoBW,KAI9CqG,CAA6CtD,GCjItDwD,eACF,SAAAA,EAAYtJ,GAAM,IAAA+F,EAAA,OAAAvG,OAAAwG,EAAA,EAAAxG,CAAAuE,KAAAuF,IACdvD,EAAAvG,OAAAyG,EAAA,EAAAzG,CAAAuE,KAAAvE,OAAA0G,EAAA,EAAA1G,CAAA8J,GAAAnD,KAAApC,KAAM/D,KASVoG,gBAAkB,SAACC,GACfN,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOgE,EAAEE,OAAOC,SAX3BT,EAclBsB,gBAdkB,eAAAjI,EAAAI,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAcA,SAAAC,EAAOwE,GAAP,IAAAC,EAAAjF,EAAAE,EAAAiC,EAAA,OAAA7B,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdiE,EAAME,iBACFzB,EAAKzF,MAAMgC,OAAUyD,EAAKzF,MAAMkC,SAFtB,CAAAW,EAAAE,KAAA,eAIVoE,MAAM,iCAJItE,EAAAuE,OAAA,wBAAAH,EAOYxB,EAAKzF,MAAzBgC,EAPQiF,EAORjF,MAAOE,EAPC+E,EAOD/E,SAPCW,EAAAE,KAAA,EAQR0C,EAAK/F,MAAMuJ,UAAU,CAACjH,QAAOE,aARrB,QASViC,EAAQxE,eAAeC,QAAQ,WACb,OAAVuE,QAA4Bf,IAAVe,GAAiC,cAAVA,IACjDsB,EAAKU,SAAS,CAACmB,MAAM,IACrB7B,EAAK/F,MAAMwJ,QAAQC,KAAK,eAZd,wBAAAtG,EAAAW,SAAAhB,EAAAiB,SAdA,gBAAAC,GAAA,OAAA5E,EAAA6E,MAAAF,KAAAG,YAAA,GAEd6B,EAAKzF,MAAQ,CACTgC,MAAO,GACPE,SAAU,GACVoF,MAAM,EACN8B,OAAO,GANG3D,wEA+Bd,OACIrG,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,KAAK,OAAOF,KAAM7D,KAAKzD,MAAMsH,KAAMG,eAAe,EAAOC,oBAAoB,GAChFtI,EAAAC,EAAAC,cAACiI,EAAA,EAAMI,OAAP,yBACAvI,EAAAC,EAAAC,cAACiI,EAAA,EAAMK,QAAP,KACIxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,sBAAsBC,MAAO,CAACC,UAAW,SAC3EC,SAAUzE,KAAKqC,gBAAiBuC,MAAM,aAAaC,cAAc,UACrElJ,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,WAAWiB,KAAK,WAAW8E,OAAK,EAACC,YAAY,sBACrDI,KAAK,MAAMH,MAAO,CAACC,UAAW,SAC9BC,SAAUzE,KAAKqC,kBACjBrC,KAAK/D,MAAM2B,OAASjC,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAK/D,MAAM2B,OAC9DjC,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,MACApJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,QAAQ2G,SAAO,EAACZ,OAAK,EAACN,KAAK,QACpCmB,QAAWlF,KAAKsD,gBAChB7D,QAAWO,KAAK/D,MAAMwD,SAAWO,KAAKzD,MAAMoJ,OAFhD,UAIJhK,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,mBACezJ,EAAAC,EAAAC,cAAA,KAAGiJ,KAAK,aAAR,qBAhDFxJ,aAoEd+J,mBAbf,SAAyB9I,GACrB,MAAO,CACHqB,MAAOrB,EAAMmB,KAAKE,MAClB6B,QAASlD,EAAMmB,KAAK+B,QACpB2B,OAAQ7E,EAAMmB,KAAK0D,SAG3B,SAA4BpC,GACxB,MAAO,CACHwG,UAAWF,YAAmBlF,EAAiBpB,KAIxCqG,CAA6CE,+DC9C7CK,GAAAnK,OAAAoK,GAAA,MA5BG,CACdC,SAAU,WACVC,iBAAkB,mBAClBC,iBAAkB,mBAElBC,YAAa,cACbC,oBAAqB,sBACrBC,oBAAqB,sBAErBC,6BAA8B,+BAE9BC,UAAW,YACXC,kBAAmB,oBACnBC,kBAAmB,oBAEnBC,iBAAkB,mBAClBC,sBAAuB,uBACvBC,sBAAuB,wBAEvBC,eAAgB,iBAChBC,uBAAwB,yBACxBC,uBAAwB,yBAExBC,mBAAoB,qBACpBC,2BAA4B,6BAC5BC,2BAA4B,+BCtBxBlB,GAIoDpJ,GAJpDoJ,SAAUC,GAI0CrJ,GAJ1CqJ,iBAAkBC,GAIwBtJ,GAJxBsJ,iBAC5BQ,GAGoD9J,GAHpD8J,iBAAyCE,IAGWhK,GAHlC+J,sBAGkC/J,GAHXgK,uBACzCC,GAEoDjK,GAFpDiK,eAAgBC,GAEoClK,GAFpCkK,uBAAwBC,GAEYnK,GAFZmK,uBACxCZ,GACoDvJ,GADpDuJ,YAAaC,GACuCxJ,GADvCwJ,oBAAqBC,GACkBzJ,GADlByJ,oBAAoBC,GACF1J,GADE0J,6BACtDC,GAAoD3J,GAApD2J,UAAWC,GAAyC5J,GAAzC4J,kBAAmBC,GAAsB7J,GAAtB6J,kBAEzBU,GAAiB,SAAA5L,GAAoB,IAARiD,EAAQjD,EAARiD,KAChCF,EAASZ,IACTW,EAAUf,EAAMsB,KAAK,qBAAsB,CAAEJ,QAAQF,GAC3D,sBAAAO,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAgI,EAAAhJ,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHN,EAegC,CAAEO,KAAMuG,GAAUtG,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,QAAS,cAhB7FL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLG,EAAAM,KAAAN,EAAAE,KAAA,EAIgCL,EAAKhB,KAJrC,OAAAiB,EAAAE,EAAAM,KAIOwH,EAJPhI,EAIOgI,MAAOhJ,EAJdgB,EAIchB,QACbH,QAAQC,IAAI,mBAAoBkJ,GAE5BlI,EADS,OAAVkI,EACUE,EAAelJ,GAEfmJ,EAAiBH,IAT/B9H,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAYKvB,EAAeF,EAAWyB,EAAAU,IAC9Bd,EAASoI,EAAevJ,IAbzB,yBAAAuB,EAAAW,SAAAhB,EAAAiB,KAAA,aAAP,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GAiBA,SAASkH,EAAiBH,GAAS,MAAO,CAAE3H,KAAMwG,GAAkBvG,QAAS,CAAE0H,QAAOzH,QAAS,GAAI0H,SAAS,IAC5G,SAASC,EAAexJ,GAAS,MAAO,CAAE2B,KAAMyG,GAAkBxG,QAAS,CAAE5B,QAAO6B,QAAS,OAGpF6H,GAAoB,SAAAjH,GAAuB,IAAXkH,EAAWlH,EAAXkH,QACnCnJ,EAASZ,IACTW,EAAUf,EAAMoK,OAAN,kBAAAC,OAA+BF,GAAWnJ,GAC1D,sBAAAkC,EAAA7E,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAyB,EAAOvB,GAAP,IAAAC,EAAAuB,EAAA0G,EAAAhJ,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACHN,EAAS0I,EAAmBH,IADzB5G,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAGkBnB,EAHlB,cAGKc,EAHL0B,EAAAjB,KAAAiB,EAAArB,KAAA,EAIgCL,EAAKhB,KAJrC,OAAAuC,EAAAG,EAAAjB,KAIOwH,EAJP1G,EAIO0G,MAAOhJ,EAJdsC,EAIctC,QACbH,QAAQC,IAAI,sBAAuBkJ,GAE/BlI,EADS,OAAVkI,EACUS,EAAkBzJ,GAElB0J,EAAoBV,IATlCvG,EAAArB,KAAA,iBAAAqB,EAAAtB,KAAA,GAAAsB,EAAAb,GAAAa,EAAA,SAYK9C,EAAeF,EAAWgD,EAAAb,IAC9Bd,EAAS2I,EAAkB9J,IAb5B,yBAAA8C,EAAAZ,SAAAQ,EAAAP,KAAA,aAAP,gBAAAe,GAAA,OAAAT,EAAAJ,MAAAF,KAAAG,YAAA,GAgBA,SAASuH,EAAmBH,GAAW,MAAO,CAAEhI,KAAM0G,GAAazG,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,QAAS8H,IACjH,SAASK,EAAoBV,GAAS,MAAO,CAAE3H,KAAM2G,GAAqB1G,QAAS,CAAE0H,QAAOzH,QAAS,GAAI0H,SAAS,IAClH,SAASQ,EAAkB/J,GAAS,MAAO,CAAE2B,KAAM4G,GAAqB3G,QAAS,CAAE5B,QAAO6B,QAAS,OAG1FoI,GAAkB,SAAA5G,GAAmC,IAAxBsG,EAAwBtG,EAAxBsG,QAASjJ,EAAe2C,EAAf3C,KAAMwJ,EAAS7G,EAAT6G,OAC/C1J,EAASZ,IACTW,EAAUf,EAAM2K,IAAN,kBAAAN,OAA4BF,GAAW,CAAEjJ,OAAMwJ,UAAU1J,GACzE,sBAAA+C,EAAA1F,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAoC,EAAOlC,GAAP,IAAAC,EAAA+I,EAAAd,EAAAhJ,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cACHN,EAeiC,CAAEO,KAAM8G,GAAW7G,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,SAAS,KAhB/F4B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLoC,EAAA3B,KAAA2B,EAAA/B,KAAA,EAIgCL,EAAKhB,KAJrC,OAAA+J,EAAA3G,EAAA3B,KAIOwH,EAJPc,EAIOd,MAAOhJ,EAJd8J,EAIc9J,QACbH,QAAQC,IAAI,oBAAqBkJ,GAE7BlI,EADS,OAAVkI,EACUe,EAAgB/J,GAEhBgK,EAAkBhB,IAThC7F,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAvB,GAAAuB,EAAA,SAYKxD,EAAeF,EAAW0D,EAAAvB,IAC9Bd,EAASiJ,EAAgBpK,IAb1B,yBAAAwD,EAAAtB,SAAAmB,EAAAlB,KAAA,aAAP,gBAAAyB,GAAA,OAAAN,EAAAjB,MAAAF,KAAAG,YAAA,GAiBA,SAAS+H,EAAkBhB,GAAS,MAAO,CAAE3H,KAAM+G,GAAmB9G,QAAS,CAAE0H,QAAOzH,SAAS,EAAO0H,SAAS,IACjH,SAASc,EAAgBrK,GAAS,MAAO,CAAE2B,KAAMgH,GAAmB/G,QAAS,CAAE5B,QAAO6B,SAAS,MAGtF0I,GAAuB,WAChC,IAAI/J,EAASZ,IACPW,EAAUf,EAAMkE,IAAN,sBAAiClD,GACjD,sBAAAgK,EAAA3M,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAuJ,EAAOrJ,GAAP,IAAAC,EAAAqJ,EAAAzK,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,cACHN,EAcmC,CAAEO,KAAMoH,GAAgBnH,QAAS,CAAEC,SAAS,EAAM7B,MAAO,MAfzF2K,EAAAlJ,KAAA,EAAAkJ,EAAAjJ,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLsJ,EAAA7I,KAAA6I,EAAAjJ,KAAA,EAIoBL,EAAKhB,KAJzB,OAKsB,QADjBqK,EAJLC,EAAA7I,MAKW8I,OACNxJ,EAASyJ,EAAkBH,EAAOpK,UAElCc,GAQiBwJ,EARYF,EAAOE,OAQF,CAAEjJ,KAAMqH,GAAwBpH,QAAS,CAAEgJ,SAAQ/I,SAAS,MAhBnG8I,EAAAjJ,KAAA,iBAAAiJ,EAAAlJ,KAAA,GAAAkJ,EAAAzI,GAAAyI,EAAA,SAWK1K,EAAeF,EAAW4K,EAAAzI,IAC9Bd,EAASyJ,EAAkB5K,IAZ5B,yBAAA0K,EAAAxI,OAgBP,IAA6ByI,GAhBtBH,EAAArI,KAAA,aAAP,gBAAA0I,GAAA,OAAAN,EAAAlI,MAAAF,KAAAG,YAAA,GAiBA,SAASsI,EAAkB7K,GAAS,MAAO,CAAE2B,KAAMsH,GAAwBrH,QAAS,CAAE5B,QAAO6B,SAAS,MAG7FkJ,GAAyB,SAAAC,GAAqB,IAAVrB,EAAUqB,EAAVrB,QAC7C,MAAO,CACHhI,KAAMiH,GACNhH,QAAS,CAAE+H,aAINsB,GAA8B,SAAAC,GAAqB,IAAVvB,EAAUuB,EAAVvB,QAClD,MAAO,CACHhI,KAAMmH,GACNlH,QAAS,CAAE+H,aAWNwB,GAA+B,SAAAC,GAA+B,IAArBzB,EAAqByB,EAArBzB,QAAS0B,EAAYD,EAAZC,UAC3D,MAAO,CACH1J,KAAM6G,GACN5G,QAAS,CAAE+H,UAAS0B,eCzHtBC,8MACFC,OAAS,SAAA5F,GACLA,EAAME,iBACNzB,EAAK/F,MAAMwJ,QAAQC,KAAnB,cAAA+B,OAAsCzF,EAAK/F,MAAMiL,MAAMkC,QAE3DC,+CAAW,SAAAtK,EAAMwE,GAAN,OAAA1E,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPiE,EAAME,iBADCrE,EAAAE,KAAA,EAED0C,EAAK/F,MAAMqN,YAAY,CAAC/B,QAASvF,EAAK/F,MAAMiL,MAAMkC,KAFjD,wBAAAhK,EAAAW,SAAAhB,EAAAiB,iEAIXuJ,+CAAW,SAAAhJ,EAAMgD,GAAN,OAAA1E,EAAAjD,EAAAuD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACPiE,EAAME,iBADC9C,EAAArB,KAAA,EAED0C,EAAK/F,MAAMuN,WAAW,CAACjC,QAAShE,EAAMf,OAAOlE,OAF5C,wBAAAqC,EAAAZ,SAAAQ,EAAAP,uIAIF,IAAAyJ,EAC6BzJ,KAAK/D,MAAMiL,MAAvCkC,EADDK,EACCL,GAAI9K,EADLmL,EACKnL,KAAMwJ,EADX2B,EACW3B,OAAQ4B,EADnBD,EACmBC,MACpBC,EAAgB3J,KAAK/D,MAAM0N,cAAgB3J,KAAK/D,MAAM0N,cAAcrL,KAAO,eAC3EsL,EAAoB,iBAATtL,EACf,OACI3C,EAAAC,EAAAC,cAACgO,GAAA,EAAKC,KAAN,CAAWC,IAAKX,GACZzN,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAM3F,OAAK,EAACM,MAAOgF,IAAkBrL,EAAO,MAAQ,QAChD3C,EAAAC,EAAAC,cAACmO,GAAA,EAAK7F,QAAN,KACIxI,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAMC,QAAS,GACXvO,EAAAC,EAAAC,cAACoO,GAAA,EAAKE,IAAN,KACIxO,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAaC,UAAU,QACnB1O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAMhM,KAAM8K,EAAI/M,GAAE,cAAAoL,OAAgB2B,GAAMlE,QAASlF,KAAKuJ,UAAWjL,GACjE3C,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOC,UAAQ,EAACzG,KAAK,OAAOY,MAAQmD,EAAS,QAAU,OAASvD,MAAO,CAACkG,WAAW,UAAYf,KAGvG/N,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAaC,UAAU,SACnBT,GACAjO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,SAASX,KAAK,OAAOyG,UAAQ,EAAC7F,MAAM,SAC7CO,QAASlF,KAAKmJ,SAClBxN,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,SAASX,KAAK,OAAOyG,UAAQ,EACtC/K,QAAWO,KAAK/D,MAAMwD,UAAY2J,EAClClE,QAASlF,KAAKqJ,yBApC7B/N,aA8Dd+J,mBAbf,SAAyB9I,GACrB,MAAO,CACHkD,QAASlD,EAAM2K,MAAMzH,QACrB7B,MAAOrB,EAAM2K,MAAMtJ,MACnB+L,cAAepN,EAAM2K,MAAMyC,gBAGnC,SAA4B3K,GACxB,MAAO,CACHsK,YAAahE,YAAmBgC,GAAmBtI,GACnDwK,WAAYlE,YAAmBuD,GAA6B7J,KAGrDqG,CAA6C6D,kCC9DtDwB,8MAEFnO,MAAQ,CACJoO,SAAS,MAObC,eAAiB,eAIjBC,iDAAa,SAAA9L,EAAMwE,GAAN,OAAA1E,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACH0C,EAAK/F,MAAM6O,SAAS,CAACxM,KAAM0D,EAAKzF,MAAMoO,WADnC,OAEN3I,EAAK/F,MAAM2B,OACV8F,MAAM1B,EAAK/F,MAAM2B,OAErBoE,EAAKU,SAAS,CAACiI,SAAU,KALhB,wBAAAvL,EAAAW,SAAAhB,EAAAiB,iEAQbqC,gBAAkB,SAAAC,GACdN,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOgE,EAAEE,OAAOC,oNAhBnCzC,KAAK/D,MAAM8O,oJAmBX,IAAAC,EAAAhL,KACFwI,EAAS,GACTyC,EAAc,CAAE7B,GAAI,QAAS9K,KAAM,eAAgBwJ,QAAQ,GAQ/D,OAPAU,EAAO9C,KAAKuF,GACZA,EAAYvB,MAAQ,EACpB1J,KAAK/D,MAAMuM,OAAO0C,QAAQ,SAAAC,GACtBF,EAAYvB,OAASyB,EAAEC,SAASjI,OAChCqF,EAAO9C,KAAKyF,KAIZxP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,KACI1P,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAMC,QAAS,GACXvO,EAAAC,EAAAC,cAACoO,GAAA,EAAKE,IAAN,KACIxO,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,KACIzO,EAAAC,EAAAC,cAACqI,GAAA,EAAD,CAAQS,MAAM,UACVhJ,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CAAMhN,KAAK,UACX3C,EAAAC,EAAAC,cAACqI,GAAA,EAAOC,QAAR,iBAGRxI,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAamB,MAAM,SACf5P,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,OAAK,EACR/F,KAAK,WACLsG,MAAOjJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,MAAMjF,QAASO,KAAK/D,MAAMwD,QAAS+L,SAAO,EAACtG,QAASlF,KAAK6K,aAC7EhG,cAAc,QACdpC,MAAOzC,KAAKzD,MAAMoO,SAClBrG,YAAY,gBACZG,SAAUzE,KAAKqC,mBAEvB1G,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,QAIRzO,EAAAC,EAAAC,cAACgO,GAAA,EAAD,KAEQrB,EAAOiD,IAAI,SAAAN,GAAC,OACRxP,EAAAC,EAAAC,cAAC6P,GAADjQ,OAAAM,OAAA,CAAgBuC,KAAM6M,EAAE7M,KAAMyL,IAAKoB,EAAE7M,KAAM4I,MAAOiE,GAAOH,EAAK/O,mBA9DpDX,aAsFvB+J,mBAhBf,SAAyB9I,GACrB,MAAO,CACHoP,eAAgBpP,EAAMqP,QAAQD,eAC9BnD,OAAQjM,EAAM2K,MAAMsB,OACpB/I,QAAiC,aAAxBlD,EAAM2K,MAAMzH,QACrB7B,MAAOrB,EAAM2K,MAAMtJ,QAI3B,SAA4BoB,GACxB,MAAO,CACH8L,SAAUxF,YAAmB2B,GAAgBjI,GAC7C+L,eAAgBzF,YAAmB6C,GAAsBnJ,KAIlDqG,CAA6CqF,iCCvE7CmB,GAAApQ,OAAAoK,GAAA,MAtBG,CACdiG,WAAY,aACZC,mBAAoB,qBACpBC,mBAAoB,qBAEpBC,cAAe,gBACfC,sBAAuB,wBACvBC,sBAAuB,wBAEvBC,YAAa,cACbC,oBAAqB,sBACrBC,oBAAqB,sBAErBC,aAAc,eACdC,qBAAsB,uBACtBC,qBAAsB,uBAEtBC,qBAAsB,uBACtBC,6BAA8B,+BAC9BC,6BAA8B,iCChB1Bd,GAEgEpP,GAFhEoP,WAAYC,GAEoDrP,GAFpDqP,mBAAoBC,GAEgCtP,GAFhCsP,mBAChCI,GACgE1P,GADhE0P,YAAaC,GACmD3P,GADnD2P,oBAAqBC,GAC8B5P,GAD9B4P,oBAClCL,GAAgEvP,GAAhEuP,cAAeE,GAAiDzP,GAAjDyP,sBAAuBD,GAA0BxP,GAA1BwP,sBAEjCW,GAAmB,SAAAxR,GAAsD,IAA1CiD,EAA0CjD,EAA1CiD,KAAME,EAAoCnD,EAApCmD,MAAOD,EAA6BlD,EAA7BkD,MAAOuO,EAAsBzR,EAAtByR,IAAK5F,EAAiB7L,EAAjB6L,MAAOY,EAAUzM,EAAVyM,OAClE1J,EAASZ,IACfO,QAAQC,IAAIM,EAAME,EAAOD,EAAOuO,EAAK5F,EAAOY,GAC5C,IAAM3J,EAAUf,EAAMsB,KAAK,eAAgB,CAAEJ,OAAME,QAAOD,QAAOuO,MAAK5F,QAAOY,UAAU1J,GACvF,sBAAAO,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA0M,EAAA1N,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHN,EAekC,CAAEO,KAAMuM,GAAYtM,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,SAAS,KAhBjGL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLG,EAAAM,KAAAN,EAAAE,KAAA,EAIkCL,EAAKhB,KAJvC,OAAAiB,EAAAE,EAAAM,KAIOkM,EAJP1M,EAIO0M,QAAS1N,EAJhBgB,EAIgBhB,QAGXc,EADW,OAAZ4M,EACUmB,EAAiB7O,GAEjB8O,EAAmBpB,IATjCxM,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAYKvB,EAAeF,EAAWyB,EAAAU,IAC9Bd,EAAS+N,EAAiBlP,IAb3B,yBAAAuB,EAAAW,SAAAhB,EAAAiB,KAAA,aAAP,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GAiBA,SAAS6M,EAAmBpB,GAAW,MAAO,CAAErM,KAAMwM,GAAoBvM,QAAS,CAAEoM,UAASnM,SAAS,EAAO0H,SAAS,IACvH,SAAS4F,EAAiBnP,GAAS,MAAO,CAAE2B,KAAMyM,GAAoBxM,QAAS,CAAE5B,QAAO6B,SAAS,MAGxFwN,GAAoB,SAAA5M,GAA0D,IAA9C+I,EAA8C/I,EAA9C+I,GAAI9K,EAA0C+B,EAA1C/B,KAAMC,EAAoC8B,EAApC9B,MAAOuO,EAA6BzM,EAA7ByM,IAAKhF,EAAwBzH,EAAxByH,OAAQtJ,EAAgB6B,EAAhB7B,MAAO0I,EAAS7G,EAAT6G,MACxE9I,EAASZ,IACTW,EAAUf,EAAM2K,IAAN,YAAAN,OAAsB2B,GAAM,CAAE9K,OAAMC,QAAOuO,MAAKhF,SAAQtJ,QAAO0I,SAAS9I,GACxF,sBAAAkC,EAAA7E,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAyB,EAAOvB,GAAP,IAAAC,EAAAuB,EAAAoL,EAAA1N,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACHN,EAASkO,EAAmB9D,IADzBzI,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAGkBnB,EAHlB,cAGKc,EAHL0B,EAAAjB,KAAAiB,EAAArB,KAAA,EAIkCL,EAAKhB,KAJvC,OAAAuC,EAAAG,EAAAjB,KAIOkM,EAJPpL,EAIOoL,QAAS1N,EAJhBsC,EAIgBtC,QACfH,QAAQC,IAAI,oBAAqB4N,GAE7B5M,EADW,OAAZ4M,EACUuB,EAAkBjP,GAElBkP,EAAoBxB,IATlCjL,EAAArB,KAAA,iBAAAqB,EAAAtB,KAAA,GAAAsB,EAAAb,GAAAa,EAAA,SAYK9C,EAAeF,EAAWgD,EAAAb,IAC9Bd,EAASmO,EAAkBtP,IAb5B,yBAAA8C,EAAAZ,SAAAQ,EAAAP,KAAA,aAAP,gBAAAe,GAAA,OAAAT,EAAAJ,MAAAF,KAAAG,YAAA,GAgBA,SAAS+M,EAAmB9D,GAAM,MAAO,CAAE7J,KAAM6M,GAAa5M,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,QAAS2J,IAC5G,SAASgE,EAAoBxB,GAAW,MAAO,CAAErM,KAAM8M,GAAqB7M,QAAS,CAAEoM,UAASnM,SAAS,EAAO0H,SAAS,IACzH,SAASgG,EAAkBvP,GAAS,MAAO,CAAE2B,KAAM+M,GAAqB9M,QAAS,CAAE5B,QAAO6B,SAAS,MAG1F4N,GAAsB,SAAApM,GAAuB,IAAZgI,EAAYhI,EAAZgI,UACpC7K,EAASZ,IACTW,EAAUf,EAAMoK,OAAN,YAAAC,OAAyBwB,GAAa7K,GACtD,sBAAA+C,EAAA1F,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAAO,SAAAoC,EAAOlC,GAAP,IAAAC,EAAA+I,EAAA4D,EAAA1N,EAAAL,EAAA,OAAAgB,EAAAjD,EAAAuD,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cACHN,EAeuC,CAAEO,KAAM0M,GAAezM,QAAS,CAAC5B,MAAO,GAAIuJ,SAAS,EAAO1H,QAfrEwJ,KAD3B5H,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAGkBnB,EAHlB,cAGKc,EAHLoC,EAAA3B,KAAA2B,EAAA/B,KAAA,EAIkCL,EAAKhB,KAJvC,OAAA+J,EAAA3G,EAAA3B,KAIOkM,EAJP5D,EAIO4D,QAAS1N,EAJhB8J,EAIgB9J,QACfH,QAAQC,IAAI,sBAAuB4N,GAE/B5M,EADW,OAAZ4M,EACU0B,EAAoBpP,GAEpBqP,EAAsB3B,IATpCvK,EAAA/B,KAAA,iBAAA+B,EAAAhC,KAAA,GAAAgC,EAAAvB,GAAAuB,EAAA,SAYKxD,EAAeF,EAAW0D,EAAAvB,IAC9Bd,EAASsO,EAAoBzP,IAb9B,yBAAAwD,EAAAtB,SAAAmB,EAAAlB,KAAA,aAAP,gBAAAyB,GAAA,OAAAN,EAAAjB,MAAAF,KAAAG,YAAA,GAiBA,SAASoN,EAAsB3B,GAAW,MAAO,CAAErM,KAAM2M,GAAuB1M,QAAS,CAAEoM,UAASnM,QAAS,GAAI0H,SAAS,IAC1H,SAASmG,EAAoB1P,GAAS,MAAO,CAAE2B,KAAM4M,GAAuB3M,QAAS,CAAE5B,QAAO6B,QAAS,OCtErG+N,8MACFrE,OAAS,SAAA5F,GACLA,EAAME,iBACN1F,QAAQC,IAAI,oBAAqBgE,EAAK/F,MAAM2P,SAC5C5J,EAAK/F,MAAMwJ,QAAQC,KAAK,CACpBpJ,SAAQ,gBAAAmL,OAAkBzF,EAAK/F,MAAM2P,QAAQ6B,KAC7ClR,MAAO,CAAE0B,KAAM+D,EAAK/F,MAAM2P,cAGlCvC,+CAAW,SAAAtK,EAAMwE,GAAN,OAAA1E,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPiE,EAAME,iBADCrE,EAAAE,KAAA,EAED0C,EAAK/F,MAAMyR,cAAc,CAACzE,UAAWjH,EAAK/F,MAAM2P,QAAQ6B,MAFvD,cAAArO,EAAAE,KAAA,EAGD0C,EAAK/F,MAAM0R,oBAAoB,CAAEpG,QAASvF,EAAK/F,MAAM2P,QAAQ1E,MACnB+B,UAAWjH,EAAK/F,MAAM2P,QAAQ6B,MAJvE,wBAAArO,EAAAW,SAAAhB,EAAAiB,uIAMF,IAAA4N,EAC0C5N,KAAK/D,MAAM2P,QAApD6B,EADDG,EACCH,IAAKnP,EADNsP,EACMtP,KAAMC,EADZqP,EACYrP,MAAOC,EADnBoP,EACmBpP,MAAOsO,EAD1Bc,EAC0Bd,IAAKhF,EAD/B8F,EAC+B9F,OAEpC,OACInM,EAAAC,EAAAC,cAACgO,GAAA,EAAKC,KAAN,CAAWC,IAAK0D,GACZ9R,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAM3F,OAAK,GACP1I,EAAAC,EAAAC,cAACmO,GAAA,EAAK7F,QAAN,KACIxI,EAAAC,EAAAC,cAACmO,GAAA,EAAK9F,OAAN,KACK5F,EACD3C,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAOC,UAAQ,EAACzG,KAAK,OACjBY,MAAOmD,EAAS,QAAU,OAC1BvD,MAAO,CAACkG,WAAW,SAAUoD,QAASf,KAE9CnR,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAMC,QAAS,GACXvO,EAAAC,EAAAC,cAACoO,GAAA,EAAKE,IAAN,KACIxO,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAaC,UAAU,QAEnB1O,EAAAC,EAAAC,cAAA,WAAM0C,GACN5C,EAAAC,EAAAC,cAAA,WAAM2C,IAEV7C,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAaC,UAAU,SACnB1O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,SAASX,KAAK,OAAOyG,UAAQ,EAAC7F,MAAM,SAC7CO,QAASlF,KAAKmJ,SAClBxN,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,SAASX,KAAK,OAAOyG,UAAQ,EAAC/K,QAASO,KAAK/D,MAAMwD,UAAYgO,EACvEvI,QAASlF,KAAKqJ,yBAxC3B/N,aAmEhB+J,mBAff,SAAyB9I,GAErB,MAAO,CAEHkD,QAASlD,EAAMqP,QAAQnM,QACvB7B,MAAOrB,EAAMqP,QAAQhO,QAI7B,SAA4BoB,GACxB,MAAO,CACH0O,cAAepI,YAAmB+H,GAAqBrO,GACvD2O,oBAAqBrI,YAAmByD,GAA8B/J,KAG/DqG,CAA8CmI,ICnEvDM,8MACFvR,MAAQ,CACJwR,WAAY,EACZC,WAAY,EACZC,aAAc,GACdC,SAAU,OACVC,OAAQ,OACRC,OAAQ,GACRC,SAAU,GACVC,YAAa,CAAG,CAAEvE,IAAK,OAAQwE,KAAM,OAAQ9L,MAAO,QACxC,CAAEsH,IAAK,OAAQwE,KAAM,OAAQ9L,MAAO,QACpC,CAAEsH,IAAK,QAASwE,KAAM,QAAS9L,MAAO,UAClD+L,cAAe,CAAG,CAAEzE,IAAK,OAAQwE,KAAM,OAAQ9L,MAAO,QAC1C,CAAEsH,IAAK,QAASwE,KAAM,QAAS9L,MAAO,UAClDgM,SAAU,IACVC,gBAAiB,CACD,CAAE3E,IAAK,IAAKwE,KAAM,IAAK9L,MAAO,KAC9B,CAAEsH,IAAK,IAAKwE,KAAM,IAAK9L,MAAO,KAC9B,CAAEsH,IAAK,KAAMwE,KAAM,KAAM9L,MAAO,MAChC,CAAEsH,IAAK,KAAMwE,KAAM,KAAM9L,MAAO,MAChC,CAAEsH,IAAK,KAAMwE,KAAM,KAAM9L,MAAO,UAGpDkM,uBAAyB,SAACrM,EAADjH,GAAuB,IAAjB0S,EAAiB1S,EAAjB0S,WAC3BhQ,QAAQC,IAAI,cAAe+P,GAC3B/L,EAAKU,SAAS,CAAEqL,kBAGpBa,SAAW,WACP5M,EAAKU,SAAS,CAAC2L,UAAU,OAG7BQ,OAAS,WACL7M,EAAKU,SAAS,CAAC0L,QAAQ,OAG3B/L,gBAAkB,SAAAC,GACdN,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOgE,EAAEE,OAAOC,WAG7CqM,kBAAoB,SAACxQ,EAAMmE,GACvBT,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6C,EAAOmE,6MAGvB1E,QAAQC,IAAI,2CACRuJ,EAAUvH,KAAK/D,MAAM8S,MAAMC,OAAO9H,OAAS,iBACzClH,KAAK/D,MAAM8O,eAAe,CAACxD,+IAE5B,IAAAyD,EAAAhL,KACD2J,EAAgB3J,KAAK/D,MAAM0N,cAC3BsF,EAAc,KACdC,EAAY,GACZC,EAAY,EAKhB,GAJGxF,IACCsF,EAAWxT,OAAA2T,GAAA,EAAA3T,CAAOkO,EAAcyB,UAChC8D,EAAYvF,EAAcrL,MAE3B0B,KAAKzD,MAAM0R,cAAgC,OAAhBgB,GAAwBA,EAAY9L,OAAS,EAAG,CAC1E,IAAIkM,EAAKrP,KAAKzD,MAAM0R,aAAaqB,cACN,SAAxBtP,KAAKzD,MAAM2R,SACVe,EAAcA,EAAYM,OAAO,SAAAC,GAAC,OAAIA,EAAElR,KAAKgR,cAAcG,SAASJ,KACtC,UAAxBrP,KAAKzD,MAAM2R,WACjBe,EAAcA,EAAYM,OAAO,SAAAC,GAAC,OAAIA,EAAEjR,MAAM+Q,cAAcG,SAASJ,MAkB7E,GAfyB,SAAtBrP,KAAKzD,MAAM4R,QAAqC,OAAhBc,GAAwBA,EAAY9L,OAAS,IACnD,SAAtBnD,KAAKzD,MAAM4R,OACVc,EAAcA,EAAYS,KAAK,SAAS9T,EAAG+T,GACvC,OAAG/T,EAAE0C,KAAOqR,EAAErR,MAAgB,EAC3B1C,EAAE0C,KAAOqR,EAAErR,KAAe,EACtB,IAEiB,UAAtB0B,KAAKzD,MAAM4R,SACjBc,EAAcA,EAAYS,KAAK,SAAS9T,EAAG+T,GACvC,OAAG/T,EAAE2C,MAAQoR,EAAEpR,OAAiB,EAC7B3C,EAAE2C,MAAQoR,EAAEpR,MAAgB,EACxB,MAIhB0Q,EAAa,CACZ,IAAIW,EAAKC,SAAS7P,KAAKzD,MAAMkS,UACzBT,EAAa8B,KAAKC,KAAKd,EAAY9L,OAASyM,GAC7CX,EAAY9L,OAAS6K,EAAa4B,IAGjC5B,GAAc,GAElBmB,EAAYnB,EACZ,IAAIgC,EAAKhQ,KAAKzD,MAAMwR,WAChBkC,GAAcD,EAAK,GAAKJ,EACxBM,EAAWF,EAAKJ,EACpBX,EAAcA,EAAYkB,MAAMF,EAAYC,GAEhD,OACIvU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwP,GAAA,EAAD,KACI1P,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAMC,QAAS,GACXvO,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,GAChBzU,EAAAC,EAAAC,cAACqI,GAAA,EAAD,CAAQS,MAAM,UACVhJ,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CAAMhN,KAAK,iBACX3C,EAAAC,EAAAC,cAACqI,GAAA,EAAOC,QAAR,KAAiB+K,KAGzBvT,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,GAChBzU,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO7E,KAAK,OAAO+E,YAAY,cAC3B3I,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,eAAemG,SAAUzE,KAAKqC,kBAC1C1G,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CAAQ7E,SAAO,EAAC8E,QAAStQ,KAAKzD,MAAMiS,cAChC+B,aAAa,OACb9L,SAAU,SAAAnC,GAAC,OAAI0I,EAAK8D,kBAAkB,WAAYxM,EAAEE,OAAOgO,kBAMvE7U,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,EAAG7E,MAAM,SACzB5P,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACIzI,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CAAQ7E,SAAO,EAAC8E,QAAStQ,KAAKzD,MAAM+R,YAChCiC,aAAa,OACb9L,SAAU,SAAAnC,GAAC,OAAI0I,EAAK8D,kBAAkB,SAAUxM,EAAEE,OAAOgO,gBAC7D7U,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQyL,UAAQ,EAACjF,SAAO,EAAC9G,KAAK,OAAOQ,QAASlF,KAAK6O,YAI3DI,GACAtT,EAAAC,EAAAC,cAACgO,GAAA,EAAD,CAAM6G,WAAS,GAEPzB,EAAYxD,IAAI,SAAA+D,GAAC,OAAI7T,EAAAC,EAAAC,cAAC8U,GAADlV,OAAAM,OAAA,CAAkBgO,IAAKyF,EAAEjR,MAAOqN,QAAS4D,GAAOxE,EAAK/O,YAM1FN,EAAAC,EAAAC,cAACwP,GAAA,EAAD,KACI1P,EAAAC,EAAAC,cAAC+U,GAAA,EAAD,CAAYC,UAAQ,EAACC,WAAS,EAC1B/C,WAAY/N,KAAKzD,MAAMwR,WACvBgD,aAAc/Q,KAAK2O,uBACnBX,WAAYmB,IAEhBxT,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACIzI,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CAAQ/R,KAAK,WAAWkN,SAAO,EAC3BjH,MAAO,CAACkG,WAAW,OACnB6F,QAAStQ,KAAKzD,MAAMmS,gBACpB6B,aAAcvQ,KAAKzD,MAAMkS,SACzBhK,SAAU,SAAAnC,GAAC,OAAI0I,EAAK8D,kBAAkB,WAAYxM,EAAEE,OAAOgO,gBAC/D7U,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQyL,UAAQ,GAAhB,uBAjJgBnV,aAuKzB+J,mBAdf,SAAyB9I,GACrB,MAAO,CACHoP,eAAgBpP,EAAMqP,QAAQD,eAC9BhC,cAAepN,EAAM2K,MAAMyC,cAC3B/L,MAAOrB,EAAM2K,MAAMtJ,QAI3B,SAA4BoB,GACxB,MAAO,CACH+L,eAAgBzF,YAAmBuD,GAA6B7J,KAIzDqG,CAA6CyI,IC1J7CkD,oLAbP,OACIrV,EAAAC,EAAAC,cAACoO,GAAA,EAAD,CAAMgH,WAAS,GACXtV,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,GAChBzU,EAAAC,EAAAC,cAACqV,GAA4BlR,KAAK/D,QAEtCN,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,IAChBzU,EAAAC,EAAAC,cAACsV,GAA8BnR,KAAK/D,gBARhCX,uBCClB8V,eACF,SAAAA,EAAYnV,GAAM,IAAA+F,EAAA,OAAAvG,OAAAwG,EAAA,EAAAxG,CAAAuE,KAAAoR,IACdpP,EAAAvG,OAAAyG,EAAA,EAAAzG,CAAAuE,KAAAvE,OAAA0G,EAAA,EAAA1G,CAAA2V,GAAAhP,KAAApC,KAAM/D,KAYVoG,gBAAkB,SAACC,GACfA,EAAEmB,iBACFzB,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOgE,EAAEE,OAAOC,SAf3BT,EAiBlBqP,gBAAkB,SAAC/S,GACf0D,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6C,GAAQ0D,EAAKzF,MAAM+B,MAlBrB0D,EAqBlBsB,gBArBkB,eAAAjI,EAAAI,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KAqBA,SAAAC,EAAOwE,GAAP,IAAA+M,EAAA,OAAAzR,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdiE,EAAME,iBACNzB,EAAKU,SAAS,CAACmB,MAAM,IACjByM,EAAU,CACE/I,QAASvF,EAAK/F,MAAMqV,WAAWlI,GAC/B9K,KAAM0D,EAAKzF,MAAM2K,OAC9BlF,EAAKzF,MAAMuL,SAAW9F,EAAK/F,MAAMqV,WAAWxJ,SAC3CwI,EAAQxI,OAAS9F,EAAKzF,MAAMuL,QAEhC/J,QAAQC,IAAI,gBAAiBsS,GATflR,EAAAE,KAAA,EAUR0C,EAAK/F,MAAMsV,UAAUjB,GAVb,OAWdtO,EAAK/F,MAAMwJ,QAAQC,KAAK,cAXV,wBAAAtG,EAAAW,SAAAhB,EAAAiB,SArBA,gBAAAC,GAAA,OAAA5E,EAAA6E,MAAAF,KAAAG,YAAA,GAAA6B,EAmClBwP,OAAS,SAAAjO,GACLA,EAAME,iBACNzB,EAAKU,SAAS,CAACmB,MAAM,IACrB7B,EAAK/F,MAAMwJ,QAAQC,KAAK,eApCxB1D,EAAKzF,MAAQ,CACT2K,MAAM,GACNY,QAAQ,EACRjE,MAAM,GALI7B,2MAURhC,KAAK/D,MAAMwV,iBAAiB,CAAClK,QAASvH,KAAK/D,MAAM8S,MAAMC,OAAO5F,YACpEpJ,KAAK0C,SAAS,CAACwE,MAAOlH,KAAK/D,MAAMqV,WAAWhT,KAAMwJ,OAAQ9H,KAAK/D,MAAMqV,WAAWxJ,4IA8B3E,IAAAkD,EAAAhL,KACL,OACIrE,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,KAAK,OAAOF,KAAM7D,KAAKzD,MAAMsH,KAAMG,eAAe,EAAMC,oBAAoB,GAC/EtI,EAAAC,EAAAC,cAACqI,GAAA,EAAD,CAAQS,MAAM,SAASJ,MAAO,CAACmN,WAAW,WAA1C,qBACA/V,EAAAC,EAAAC,cAACiI,EAAA,EAAMK,QAAP,KACIxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,cAAcC,MAAO,CAACC,UAAW,SACnEE,KAAK,QAAQiN,aAAa,OAC1BlN,SAAUzE,KAAKqC,gBACfI,MAAQzC,KAAKzD,MAAM2K,QACvBvL,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CAAUtT,KAAO,SAASuT,QAAM,EAACtN,MAAO,CAACC,UAAU,OAC/CI,MAAQ5E,KAAKzD,MAAMuL,OAAS,aAAe,WAC3CgK,QAAY9R,KAAKzD,MAAMuL,OACvBrD,SAAW,SAAAnC,GAAC,OAAI0I,EAAKqG,gBAAgB,aACvCrR,KAAK/D,MAAM2B,OAASjC,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAK/D,MAAM2B,OAC9DjC,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,MACApJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAO+M,MAAR,KACIpW,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,OAAOqG,MAAM,SACtBO,QAAWlF,KAAKsD,gBAChB7D,QAAWO,KAAK/D,MAAMwD,QAAUiF,KAAK,OAAOmJ,QAAQ,GAAGrD,UAAQ,EAACgB,SAAO,IAC3E7P,EAAAC,EAAAC,cAACmJ,EAAA,EAAOgN,GAAR,MACArW,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,SAAS4G,QAAWlF,KAAKwR,OAAQ9M,KAAK,SAASmJ,QAAQ,GAAGrD,UAAQ,EAACgB,SAAO,cA9D9ElQ,aAoFlB+J,mBAdf,SAAyB9I,GACrB,MAAO,CACH+U,WAAY/U,EAAM2K,MAAMoK,WACxB7R,QAASlD,EAAM2K,MAAMzH,QACrB7B,MAAOrB,EAAM2K,MAAMtJ,QAG3B,SAA4BoB,GACxB,MAAO,CACHyS,iBAAkBnM,YAAmBqD,GAAwB3J,GAC7DuS,UAAWjM,YAAmBuC,GAAiB7I,KAIxCqG,CAA6C+L,ICnFtDa,eACF,SAAAA,EAAYhW,GAAM,IAAA+F,EAAAvG,OAAAwG,EAAA,EAAAxG,CAAAuE,KAAAiS,IACdjQ,EAAAvG,OAAAyG,EAAA,EAAAzG,CAAAuE,KAAAvE,OAAA0G,EAAA,EAAA1G,CAAAwW,GAAA7P,KAAApC,KAAM/D,KA6CV6S,kBAAoB,SAAAzT,GAAmB,IAAjBiD,EAAiBjD,EAAjBiD,KAAMmE,EAAWpH,EAAXoH,MACxBT,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6C,EAAOmE,KA/CTT,EAkDlBK,gBAAkB,SAACC,GACf,IAAIC,EAAYD,EAAEE,OAAOC,MAEzB,GADAT,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6G,EAAEE,OAAOlE,KAAOiE,IACX,UAAlBD,EAAEE,OAAOlE,KAAkB,CAC1B,IAAIwE,EAAYP,EAAYP,EAAK/F,MAAMmF,OACnCxD,EAAQ,GACT2E,IAAcQ,IAAUC,QAAQF,KAC/BlF,EAAQ,mBAEZoE,EAAKU,SAAS,CAACO,WAAYrF,SACxB,GAAqB,UAAlB0E,EAAEE,OAAOlE,KAAkB,CACjC,IAAIV,EAAQ,GACT2E,KAAeQ,IAAUG,UAAUX,IAAcA,EAAUY,OAAS,MACnEvF,EAAQ,0BAEZoE,EAAKU,SAAS,CAACU,WAAYxF,SACxB,GAAqB,SAAlB0E,EAAEE,OAAOlE,KAAiB,CAChC,IAAIV,EAAQ,GACK,OAAd2E,QAAoC5C,IAAd4C,GAAyC,KAAdA,IAChD3E,EAAQ,0BAEZoE,EAAKU,SAAS,CAACW,UAAWzF,MAvEhBoE,EA2ElBsB,gBA3EkB,eAAA3E,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAAjD,EAAAkD,KA2EA,SAAAC,EAAOwE,GAAP,IAAAC,EAAA4F,EAAA9K,EAAAE,EAAAD,EAAAuO,EAAA5F,EAAAY,EAAAoK,EAAA3K,EAAA,OAAA1I,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdiE,EAAME,iBACNzB,EAAKU,SAAS,CAACmB,MAAM,IAFPL,EAGqDxB,EAAKzF,MAAlE6M,EAHQ5F,EAGR4F,GAAI9K,EAHIkF,EAGJlF,KAAME,EAHFgF,EAGEhF,MAAOD,EAHTiF,EAGSjF,MAAOuO,EAHhBtJ,EAGgBsJ,IAAK5F,EAHrB1D,EAGqB0D,MAAOY,EAH5BtE,EAG4BsE,OAAQoK,EAHpC1O,EAGoC0O,aAC9C3K,EAAU2K,EAAaC,KAAK,SAAAC,GAAC,OAAIA,EAAE7D,OAASrH,IAAO6C,KACvD/H,EAAKzF,MAAM6M,GALG,CAAAhK,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAMJ0C,EAAK/F,MAAMoW,YAAY,CAACjJ,KAAI9K,OAAME,QAAOD,QAAOuO,MAAK5F,MAAOK,EAASO,WANjE,OAAA1I,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAOJ0C,EAAK/F,MAAMqW,WAAW,CAAEhU,OAAME,QAAOD,QAAOuO,MAAK5F,MAAMK,EAASO,WAP5D,QAQd9F,EAAK/F,MAAMwJ,QAAQC,KAAK,cARV,yBAAAtG,EAAAW,SAAAhB,EAAAiB,SA3EA,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GAAA6B,EAsFlBwP,OAAS,SAAAjO,GACLA,EAAME,iBACNzB,EAAKU,SAAS,CAACmB,MAAM,IACrB7B,EAAK/F,MAAMwJ,QAAQC,KAAK,eAzFV1D,EA4FlBqP,gBAAkB,SAAC/S,GACf0D,EAAKU,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GAAgB6C,GAAQ0D,EAAKzF,MAAM+B,MA3FnC,IAAIsN,EAAU,GAFA,OAGX5J,EAAK/F,MAAM8S,MAAMC,OAAO5F,MACvBwC,EAAOnQ,OAAAoK,GAAA,EAAApK,CAAA,GAAQuG,EAAK/F,MAAMQ,SAASF,MAAM0B,OAEjCM,MAAQqN,EAAQrN,MAAMgU,QAAQvQ,EAAK/F,MAAMmF,OAAQ,KAG7DY,EAAKzF,MAAQ,CACT6M,GAAIpH,EAAK/F,MAAM8S,MAAMC,OAAO5F,GAC5B9K,KAAMsN,EAAQtN,MAAQ,GACtBwO,IAAKlB,EAAQkB,KAAO,GACpBtO,MAAOoN,EAAQpN,OAAS,GACxBD,MAAOqN,EAAQrN,OAAS,GACxB2I,MAAO0E,EAAQ1E,MACfgI,UAAWtD,EAAQsD,UACnBgD,aAAc,GACdpK,OAAQ8D,EAAQ9D,OAChBjE,MAAM,GAnBI7B,qMAwBVwG,EAASxI,KAAK/D,MAAMuM,QAAU,GAC9B8H,EAAU,GAEX9H,EAAOrF,OAAS,IACXqP,EAAe,GACnBhK,EAAO0C,QAAQ,SAAAC,GACXmF,EAAQ5K,KAAK,CAACqE,IAAKoB,EAAE/B,GAAImF,KAAMpD,EAAE7M,KAAMmE,MAAO0I,EAAE7M,SAIhDkU,EAFDxS,KAAKzD,MAAM6M,GAEKpJ,KAAKzD,MAAM2S,UAEXoB,EAAQ,GAAG/B,KAE9BvO,KAAK0C,SAAS,CAACwE,MAAOsL,KAE1BxS,KAAK0C,SAAS,CAACwP,aAAc5B,IAC1BtQ,KAAKzD,MAAM6M,sIAuDT,IAAA4B,EAAAhL,KAEL,OACIrE,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAOC,KAAK,OAAOF,KAAM7D,KAAKzD,MAAMsH,KAAMG,eAAe,EAAMC,oBAAoB,GAC/EtI,EAAAC,EAAAC,cAACqI,GAAA,EAAD,CAAQS,MAAM,SAASJ,MAAO,CAACmN,WAAW,WAA1C,uBACA/V,EAAAC,EAAAC,cAACiI,EAAA,EAAMK,QAAP,KACIxI,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,OAAO+F,OAAK,EAACC,YAAY,aAAaC,MAAO,CAACC,UAAW,SACjE/B,MAASzC,KAAKzD,MAAM+B,KACpBmG,SAAUzE,KAAKqC,gBAAiBqC,KAAK,OAAOiN,aAAa,SAC3D3R,KAAKzD,MAAM8G,WAAa1H,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM8G,WAElE1H,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,cAAcC,MAAO,CAACC,UAAW,SACnE/B,MAASzC,KAAKzD,MAAMgC,MACpBkG,SAAUzE,KAAKqC,gBAAiBqC,KAAK,KAAKiN,aAAa,OACvD/M,MAAM,aAAaC,cAAc,UACnC7E,KAAKzD,MAAM0G,YAActH,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM0G,YACnEtH,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,QAAQ+F,OAAK,EAACC,YAAY,cAAcC,MAAO,CAACC,UAAW,SACnE/B,MAASzC,KAAKzD,MAAMiC,MACpBiG,SAAUzE,KAAKqC,gBAAiBqC,KAAK,QAAQiN,aAAa,SAC5D3R,KAAKzD,MAAM6G,YAAczH,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAKzD,MAAM6G,YAElEzH,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAO9F,KAAK,MAAM+F,OAAK,EAACC,YAAY,iBAAiBC,MAAO,CAACC,UAAW,SACrE/B,MAASzC,KAAKzD,MAAMuQ,IACpBrI,SAAUzE,KAAKqC,gBAAiBqC,KAAK,OAAOiN,aAAa,SAG7DhW,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAOC,OAAK,EAACE,MAAO,CAACC,UAAU,SAAUC,SAAUzE,KAAKqC,iBACpD1G,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CAAQ/R,KAAO,QAAQkN,SAAO,EAACnH,OAAK,EAACiM,QAAStQ,KAAKzD,MAAM2V,cAAgB,GAAIxB,WAAS,EAClFjO,MAAUzC,KAAKzD,MAAM2K,MACrBzC,SAAU,SAAAlB,GAAK,OAAIyH,EAAK8D,kBAAkB,CAACxQ,KAAM,QAASmE,MAAOc,EAAMf,OAAOgO,iBAClF7U,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQyL,UAAQ,GAAhB,UAKAzQ,KAAKzD,MAAM6M,IACXzN,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CAAUtT,KAAO,SAASuT,QAAM,EAACtN,MAAO,CAACC,UAAU,OAC/CI,MAAQ5E,KAAKzD,MAAMuL,OAAS,aAAe,WAC3CgK,QAAY9R,KAAKzD,MAAMuL,OACvBrD,SAAW,SAAAnC,GAAC,OAAI0I,EAAKqG,gBAAgB,aAIzCrR,KAAK/D,MAAM2B,OAASjC,EAAAC,EAAAC,cAAA,QAAM0I,MAAO,CAACI,MAAM,QAAS3E,KAAK/D,MAAM2B,OAEhEjC,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,MACApJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAO+M,MAAR,KACIpW,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,OAAO2G,SAAO,EACvBC,QAAWlF,KAAKsD,gBAChB7D,QAAWO,KAAK/D,MAAMwD,QAAUiF,KAAK,OAAOmJ,QAAQ,GAAGrD,UAAQ,EAACgB,SAAO,IAC3E7P,EAAAC,EAAAC,cAACmJ,EAAA,EAAOgN,GAAR,MACArW,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQ1G,KAAK,SAASwS,WAAS,EAAC5L,QAAWlF,KAAKwR,OAAQ9M,KAAK,SAASmJ,QAAQ,GAAGrD,UAAQ,EAACgB,SAAO,cApJtFlQ,aA2KpB+J,mBAff,SAAwB9I,GAEpB,OADAwB,QAAQC,IAAI,cAAezB,GACpB,CACH6E,OAAQ7E,EAAMmB,KAAK0D,OACnBwK,QAASrP,EAAMkW,eACfjK,OAAQjM,EAAM2K,MAAMsB,SAG5B,SAA4BxJ,GACxB,MAAO,CACHsT,WAAYhN,YAAmBuH,GAAkB7N,GACjDqT,YAAa/M,YAAmB2H,GAAmBjO,KAI5CqG,CAA4C4M,cC9KrDS,8MAEFC,aAAe,SAAApP,GACXA,EAAME,iBACNzB,EAAK/F,MAAMwJ,QAAQC,KAAK,kBAE5BkN,SAAW,SAAArP,GACPA,EAAME,iBACNvH,eAAe2W,QACf7Q,EAAK/F,MAAMwJ,QAAQC,KAAK,8EAGxB,IAAIjF,EAAOvE,eAAeC,QAAQ,QAClC,OACYR,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAASyH,UAAQ,EAACnO,MAAM,UACpBhJ,EAAAC,EAAAC,cAACoO,GAAA,EAAD,KACItO,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAO,IAChBzU,EAAAC,EAAAC,cAACqI,GAAA,EAAD,CAAQ6O,GAAG,KAAKpO,MAAM,UAClBhJ,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CAAMhN,KAAK,iBACX3C,EAAAC,EAAAC,cAACqI,GAAA,EAAOC,QAAR,uBAEAxI,EAAAC,EAAAC,cAACqI,GAAA,EAAO8O,UAAR,YAAAvL,OAA0BhH,OAIlC9E,EAAAC,EAAAC,cAACoO,GAAA,EAAKG,OAAN,CAAagG,MAAM,KACfzU,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,OAAO8G,SAAO,EAAChB,UAAQ,EAACqD,QAAQ,cACzC3I,QAASlF,KAAK2S,eAClBhX,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAQN,KAAK,OAAO8G,SAAO,EAAChB,UAAQ,EAACqD,QAAQ,SACzC3I,QAASlF,KAAK4S,qBA7BpBtX,aAsCf2X,gBAAWP,IC3BpBQ,8MACJC,uCAAoB,SAAApU,IAAA,OAAAF,EAAAjD,EAAAuD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEZ0C,EAAK/F,MAAMmX,cAFC,wBAAAhU,EAAAW,SAAAhB,EAAAiB,iFAKlB,OACMrE,EAAAC,EAAAC,cAACwX,EAAA,EAAD,KACE1X,EAAAC,EAAAC,cAACyX,EAAA,EAAD,KACE3X,EAAAC,EAAAC,cAAC0X,GAAD,MACA5X,EAAAC,EAAAC,cAAC2X,EAAA,EAAD,KACE7X,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2X,OAAK,EAACC,KAAK,IAAInY,UAAWoK,KACjChK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2X,OAAK,EAACC,KAAK,SAASnY,UAAWoK,KACtChK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2X,OAAK,EAACC,KAAK,YAAYnY,UAAW4J,KAEzCxJ,EAAAC,EAAAC,cAACT,EAAD,CAAcqY,OAAK,EAACC,KAAK,aAAanY,UAAWyV,KACjDrV,EAAAC,EAAAC,cAACT,EAAD,CAAcqY,OAAK,EAACC,KAAK,oBAAoBnY,UAAWyV,KACxDrV,EAAAC,EAAAC,cAACT,EAAD,CAAcqY,OAAK,EAACC,KAAK,iBAAiBnY,UAAW6V,KACrDzV,EAAAC,EAAAC,cAACT,EAAD,CAAcqY,OAAK,EAACC,KAAK,cAAcnY,UAAW0W,KAClDtW,EAAAC,EAAAC,cAACT,EAAD,CAAcqY,OAAK,EAACC,KAAK,mBAAmBnY,UAAW0W,eAnBrD3W,aAiCH+J,mBAAQ,KANvB,SAA4BrG,GAC1B,MAAO,CACLoU,YAAa9N,YAAmBtE,EAAmBhC,KAIxCqG,CAAkC6N,ICpC7BS,QACW,cAA7BC,OAAOnX,SAASoX,UAEe,UAA7BD,OAAOnX,SAASoX,UAEhBD,OAAOnX,SAASoX,SAAS9E,MACvB,yEChBF+E,GAAe,CACf1S,OAAQ,GACRX,KAAM,GACNC,MAAO,GACPjB,SAAS,EACT7B,MAAO,GACPC,aAAc,IAoBHkW,GAjBK,WAAkC,IAAjCxX,EAAiC4D,UAAAgD,OAAA,QAAAxD,IAAAQ,UAAA,GAAAA,UAAA,GAAzB2T,GAAcE,EAAW7T,UAAAgD,OAAA,EAAAhD,UAAA,QAAAR,EAClD,OAAOqU,EAAOzU,MACV,KAAK0U,EAAQtX,MACb,KAAKsX,EAAQpX,aACb,KAAKoX,EAAQrX,eACb,KAAKqX,EAAQnX,SACb,KAAKmX,EAAQjX,gBACb,KAAKiX,EAAQlX,kBACb,KAAKkX,EAAQhX,YACb,KAAKgX,EAAQ/W,qBACb,KAAK+W,EAAQ9W,mBACT,OAAO1B,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAUyX,EAAOxU,SACjC,QACI,OAAO/D,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,KCtBpBuX,GAAe,CACflI,QAAS,GACT7B,IAAI,GACJtK,SAAS,EACT7B,MAAO,GACPC,aAAc,GACdsJ,SAAS,GA6BE+M,GA1BQ,WAAiC,IAAhC3X,EAAgC4D,UAAAgD,OAAA,QAAAxD,IAAAQ,UAAA,GAAAA,UAAA,GAAzB2T,GAAcE,EAAW7T,UAAAgD,OAAA,EAAAhD,UAAA,QAAAR,EACpD,OAAOqU,EAAOzU,MACV,KAAK0U,GAAQnI,WACb,KAAKmI,GAAQjI,mBACb,KAAKiI,GAAQlI,mBACb,KAAKkI,GAAQ7H,YACb,KAAK6H,GAAQ3H,oBACb,KAAK2H,GAAQ5H,oBACb,KAAK4H,GAAQhI,cACb,KAAKgI,GAAQ9H,sBACb,KAAK8H,GAAQ/H,sBAET,OAAOzQ,OAAAoK,GAAA,EAAApK,CAAA,GAAMc,EAAb,CACYoP,eAAgBqI,EAAOxU,QAAQoM,QAC/BnM,QAASuU,EAAOxU,QAAQC,QACxB7B,MAAOoW,EAAOxU,QAAQ5B,QAEtC,KAAKqW,GAAQzH,qBACb,KAAKyH,GAAQ1H,aACb,KAAK0H,GAAQxH,qBACT,OAAOhR,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAUyX,EAAOxU,SACjC,QACI,OAAO/D,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,KC/BpBuX,GAAe,CACftL,OAAQ,GACRmB,cAAe,KACflK,SAAS,EACT7B,MAAO,GACPC,aAAc,GACdsJ,SAAS,GA+EEgN,GA5EM,WAAkC,IAAjC5X,EAAiC4D,UAAAgD,OAAA,QAAAxD,IAAAQ,UAAA,GAAAA,UAAA,GAAzB2T,GAAcE,EAAW7T,UAAAgD,OAAA,EAAAhD,UAAA,QAAAR,EACnD,OAAOqU,EAAOzU,MACV,KAAK0U,GAAQ5N,UACb,KAAK4N,GAAQ1N,kBACb,KAAK0N,GAAQ3N,kBACb,KAAK2N,GAAQhO,YACb,KAAKgO,GAAQ9N,oBACb,KAAK8N,GAAQnO,SACb,KAAKmO,GAAQjO,iBACb,KAAKiO,GAAQtN,eACb,KAAKsN,GAAQpN,uBACT,OAAOpL,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAUyX,EAAOxU,SACjC,KAAKyU,GAAQlO,iBACT,OAAOtK,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmBiM,OAAO/M,OAAA2T,GAAA,EAAA3T,CAAKc,EAAMiM,QAAZf,OAAA,CAAoBuM,EAAOxU,QAAQ0H,SAAW8M,EAAOxU,SAClF,KAAKyU,GAAQ/N,oBAET,IAAIkO,EAAW7X,EAAMiM,OAAO+G,OAAO,SAAArI,GAAK,OAAIA,EAAMkC,KAAO4K,EAAOxU,QAAQ0H,MAAMkC,KAC9E,OAAO3N,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmBiM,OAAQ4L,GAAaJ,EAAOxU,SACnD,KAAKyU,GAAQzN,iBACT,IAAI8K,EAAa/U,EAAMiM,OAAO2J,KAAK,SAAAhH,GAAC,OAAIA,EAAE/B,KAAO4K,EAAOxU,QAAQ+H,UAChE,OAAO9L,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmB+U,eACvB,KAAK2C,GAAQxN,sBACT,OAAOhL,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmB8X,WAAY9X,EAAMiM,SACzC,KAAKyL,GAAQvN,sBACT,IAAIiD,EAAgB,CAChBP,GAAI,QACJ9K,KAAM,eACNwJ,QAAQ,EACR4B,MAAO,EACP0B,SAAU,IAYd,MAV8B,UAA3B4I,EAAOxU,QAAQ+H,QAEdhL,EAAMiM,OAAO0C,QAAQ,SAAAC,GAAK,IAAAmJ,EACnBnJ,EAAEzB,MAAQ,IACT4K,EAAA3K,EAAcyB,UAAS1F,KAAvBxF,MAAAoU,EAAA7Y,OAAA2T,GAAA,EAAA3T,CAA+B0P,EAAEC,aAIzCzB,EAAgBpN,EAAMiM,OAAO2J,KAAK,SAAAhH,GAAC,OAAIA,EAAE/B,KAAO4K,EAAOxU,QAAQ+H,UAE5D9L,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmBoN,kBAEvB,KAAKsK,GAAQrN,uBACT,IAAI2N,EAAY,CACZnL,GAAI,QACJ9K,KAAM,eACNwJ,QAAQ,EACR4B,MAAO,EACP0B,SAAU,IASd,OANG4I,EAAOxU,QAAQgJ,QACdwL,EAAOxU,QAAQgJ,OAAO0C,QAAQ,SAAAC,GAAK,IAAAqJ,EAC5BrJ,EAAEzB,MAAQ,IACT8K,EAAAD,EAAUnJ,UAAS1F,KAAnBxF,MAAAsU,EAAA/Y,OAAA2T,GAAA,EAAA3T,CAA2B0P,EAAEC,aAGlC3P,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmBoN,cAAe4K,GAAcP,EAAOxU,SAC3D,KAAKyU,GAAQ7N,6BAAb,IAAAqO,EAEiCT,EAAOxU,QAA9B+H,EAFVkN,EAEUlN,QAAS0B,EAFnBwL,EAEmBxL,UACXyL,EAAYnY,EAAMiM,OAAO2J,KAAK,SAAAhH,GAAC,OAAIA,EAAE/B,KAAO7B,IAChDmN,EAAUtJ,SAAWsJ,EAAUtJ,SAASmE,OAAO,SAAAC,GAAC,OAAIA,EAAE/B,MAAQxE,IAC9DyL,EAAUhL,OAAS,EAEnB,IAAIiL,EAAkBpY,EAAMoN,cAAcyB,SAASmE,OAAO,SAAAC,GAAC,OAAIA,EAAE/B,MAAQxE,IAGrET,EAAM/M,OAAA2T,GAAA,EAAA3T,CAAOc,EAAMiM,OAAO+G,OAAO,SAAApE,GAAC,OAAIA,EAAE/B,KAAO7B,KAAzCE,OAAA,CAAmDiN,IAC7D,OAAOjZ,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,EAAZ,CAAmBiM,SAAQmB,cAAe,CAAEyB,SAAUuJ,IAAsBX,EAAOxU,SACvF,QACI,OAAO/D,OAAAoK,GAAA,EAAApK,CAAA,GAAKc,KCxETqY,GANKC,YAAgB,CAChCnX,KAAMqW,GACNnI,QAASsI,GACThN,MAAOiN,KCIIW,GAPDC,YACVH,GACAI,YACIC,OCARC,IAASlZ,OACLL,EAAAC,EAAAC,cAACsZ,EAAA,EAAD,CAAUL,MAAOA,IACbnZ,EAAAC,EAAAC,cAACuZ,GAAD,OAEJC,SAASC,eAAe,SNqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6fb14d97.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    return <Route {...rest} render={props => (\r\n                                        sessionStorage.getItem('token')\r\n                                            ? <Component {...props} />\r\n                                            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n                                    )} />\r\n    }","const constants = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGIN_SUCCEDED: \"LOGIN_SUCCEDED\",\r\n    LOGIN_FAILED: \"LOGIN_FAILED\",\r\n\r\n    REGISTER: \"REGISTER\",\r\n    REGISTER_SUCCEDED: \"REGISTER_SUCCEDED\",\r\n    REGISTER_FAILED: \"REGISTER_FAILED\",\r\n\r\n    FETCHDOMAIN: \"FETCHDOMAIN\",\r\n    FETCHDOMAIN_SUCCEDED: \"FETCHDOMAIN_SUCCEDED\",\r\n    FETCHDOMAIN_FAILED: \"FETCHDOMAIN_FAILED\",\r\n}\r\n\r\nexport default constants","import axios from 'axios'\r\n\r\nexport const proxy = axios.create({\r\n    baseURL: //'http://localhost:3300/'\r\n            'https://addressbook2-server.herokuapp.com/'\r\n})\r\n\r\nexport function getConfig() {\r\n    return { headers: {'auth': sessionStorage.getItem('token') } }\r\n}\r\n\r\nexport const handleError = error => {\r\n    let errorMessage = ''\r\n    if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.log(error.response);\r\n        errorMessage = error.response.data.message;\r\n        // console.log(error.response.status);\r\n        // console.log(error.response.headers);\r\n    } else if (error.request) {\r\n        // The request was made but no response was received\r\n        // `error.request` is an instance of XMLHttpRequest in the \r\n        // browser and an instance of\r\n        // http.ClientRequest in node.js\r\n        console.log(error.request);\r\n        errorMessage = 'Network error'\r\n    } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log('Error', error.message);\r\n        errorMessage = error.message;\r\n    }\r\n    console.log(error.config);\r\n    return errorMessage;\r\n}\r\n","import constants from '../constants/auth'\r\nimport { proxy, handleError } from '../api/api'\r\n\r\nconst { REGISTER, REGISTER_FAILED, REGISTER_SUCCEDED, \r\n        LOGIN, LOGIN_SUCCEDED, LOGIN_FAILED,\r\n        FETCHDOMAIN, FETCHDOMAIN_SUCCEDED, FETCHDOMAIN_FAILED\r\n        } = constants\r\n\r\nexport const registerUserAction = function ({name, email, phone, password}) {\r\n    const request = proxy.post('users/register', {name, email, phone, password})\r\n    return async (dispatch) => {\r\n        dispatch(registerStarted())\r\n        try{\r\n            let resp = await request\r\n            let {message} = await resp.data\r\n            if(message !== undefined) {\r\n                dispatch(registerFailed(message))\r\n            }else \r\n                dispatch(registerSucceded())\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(registerFailed(errorMessage))\r\n        }\r\n    }\r\n    function registerStarted() { return { type: REGISTER , payload: { error: false, loading: true }} }\r\n    function registerSucceded() { return { type: REGISTER_SUCCEDED, payload: { registered: true, loading: false } } }\r\n    function registerFailed(error) { return { type: REGISTER_FAILED, payload: { error, loading: false} } }\r\n}\r\n\r\nexport const loginUserAction = ({email, password}) => {\r\n    return async (dispatch) => {\r\n        dispatch(loginStarted())\r\n        try{\r\n            let resp = await proxy.post('users/login', {email, password})\r\n            let {user, token, message } = await resp.data\r\n            if(user && user !== '' && user !== undefined)\r\n                sessionStorage.setItem('name', user.name)\r\n            if(token && token !== '' && token !== undefined )\r\n                sessionStorage.setItem('token', token)\r\n            if(user === null || user === undefined || token === undefined) {\r\n                dispatch(loginFailed(message))\r\n            }else \r\n                dispatch(loginSucceded(user))\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(loginFailed(errorMessage))\r\n        }\r\n    }\r\n    function loginStarted() { return { type: LOGIN, payload: { error: false, loading: true } } }\r\n    function loginSucceded(user) { return { type: LOGIN_SUCCEDED, payload: { user, loading: false } } }\r\n    function loginFailed(error) { return { type: LOGIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n\r\nexport const fetchDomainAction = () => {\r\n    return async (dispatch) => {\r\n        dispatch(fetchDomainStarted())\r\n        try{\r\n            let resp = await proxy.get('domain')\r\n            let { domain, message } = await resp.data\r\n            if(domain === null || domain === undefined || domain === undefined) {\r\n                dispatch(fetchDomainFailed(message))\r\n            }else {\r\n                sessionStorage.setItem('domain', domain)\r\n                dispatch(fetchDomainSucceded(domain))\r\n            }\r\n        }catch(error) {\r\n            let errorMessage = handleError(error)\r\n            dispatch(fetchDomainFailed(errorMessage))\r\n        }\r\n    }\r\n    function fetchDomainStarted() { return { type: FETCHDOMAIN, payload: { error: false, loading: true } } }\r\n    function fetchDomainSucceded(domain) { return { type: FETCHDOMAIN_SUCCEDED, payload: { domain, loading: false } } }\r\n    function fetchDomainFailed(error) { return { type: FETCHDOMAIN_FAILED, payload: {loading: false, error} } }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Message, Divider} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { registerUserAction } from '../../actions/auth';\r\nimport validator from 'validator'\r\n\r\n//var strongRegex = new RegExp(\"^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\nconst oneCapitalLetter = new RegExp(\"^(?=.*[A-Z])\")\r\nconst oneNumber = new RegExp(\"^(?=.*[0-9])\")\r\nconst oneSpecialLetter = new RegExp(\"^(?=.*[!@#$%^&*])\")\r\nconst min8Length = new RegExp(\"^(?=.{8,})\")\r\n\r\n\r\nclass RegisterComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone:'',\r\n            password: '',\r\n            open: true,\r\n            passwordError: 'length > 8, special character, number, capital letter',\r\n            emailError: '',\r\n            phoneError: '',\r\n            nameError: '',\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        let tempValue = e.target.value\r\n        this.setState({[e.target.name]: tempValue})\r\n        if(e.target.name === 'password') {\r\n            let error = ''\r\n            if(!min8Length.test(tempValue)) {\r\n                error += 'length > 8, '\r\n            }\r\n            if(!oneSpecialLetter.test(tempValue)) {\r\n                error += 'special character, '\r\n            }\r\n            if(!oneNumber.test(tempValue)) {\r\n                error += 'number, '\r\n            }\r\n            if(!oneCapitalLetter.test(tempValue)) {\r\n                error += 'capital letter'\r\n            }\r\n            this.setState({passwordError: error})\r\n        } else if(e.target.name === 'email') {\r\n            let tempEmail = tempValue + this.props.domain\r\n            let error = ''\r\n            if(tempValue && !validator.isEmail(tempEmail)) {\r\n                error = 'Email not valid'\r\n            }\r\n            this.setState({emailError: error})\r\n        } else if(e.target.name === 'phone') {\r\n            let error = ''\r\n            if(tempValue && (!validator.isNumeric(tempValue) || tempValue.length < 10)) {\r\n                error = 'phone number not valid'\r\n            }\r\n            this.setState({phoneError: error})\r\n        } else if(e.target.name === 'name') {\r\n            let error = ''\r\n            if(tempValue === null || tempValue === undefined || tempValue === '') {\r\n                error = 'name is required field'\r\n            }\r\n            this.setState({nameError: error})\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        if( this.state.emailError || this.state.passwordError || this.state.phoneError ||\r\n            !this.state.name || !this.state.password || !this.state.phone || !this.state.email)\r\n        {\r\n            alert('please correct all entries.')\r\n            return\r\n        }\r\n        //this.setState({open: false})\r\n        let {name, email, phone, password} = this.state\r\n        await this.props.registerUser({name, email, phone, password,})\r\n    }\r\n\r\n    render() {\r\n        let registered = this.props.registered || false\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='user' ></Input>\r\n                    { this.state.nameError && <span style={{color:'red'}}>{this.state.nameError}</span>}\r\n\r\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label = '@inmar.com' labelPosition='right'></Input>\r\n                    { this.state.emailError && <span style={{color:'red'}}>{this.state.emailError}</span>}\r\n\r\n                    <Input name=\"phone\" fluid placeholder='Enter phone number' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} icon='phone' ></Input>\r\n                    { this.state.phoneError && <span style={{color:'red'}}>{this.state.phoneError}</span>}\r\n\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.state.passwordError && <span style={{color:'red'}}>{this.state.passwordError}</span>}\r\n\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    { registered && <span style={{color:'green'}}>Now you are registered, please <a href='/login'>login</a> to proceed.</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='register' primary fluid\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.register} >Register</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    Already a user? <a href='/login'>Login</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n        registered: state.auth.registered,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        registerUser: bindActionCreators(registerUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterComponent)","import React, {Component} from 'react'\r\nimport {Input, Button, Modal, Divider, Message} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { loginUserAction } from '../../actions/auth'\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            open: true,\r\n            login: false,\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        if(!this.state.email || !this.state.password)\r\n        {\r\n            alert('please enter required values.')\r\n            return\r\n        } \r\n        let { email, password } = this.state\r\n        await this.props.loginUser({email, password})\r\n        let token = sessionStorage.getItem('token')\r\n        if(token && token !== null && token !== undefined && token !== 'undefined') {\r\n            this.setState({open: false})       \r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal size='mini' open={this.state.open} closeOnEscape={false} closeOnDimmerClick={false}>\r\n                <Modal.Header>User Information</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input name=\"email\" fluid placeholder='Enter your username' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} label='@inmar.com' labelPosition='right'></Input>\r\n                    <Input name=\"password\" type='password' fluid placeholder='Enter your password'\r\n                        icon='key' style={{marginTop: '0.5em'}}\r\n                        onChange={this.onChangeHandler} />\r\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\r\n                    <Divider></Divider>\r\n                    <Button name='login' primary fluid size='small'\r\n                        onClick = {this.onSubmitHandler}\r\n                        loading= { this.props.loading && this.state.login} >Login</Button>\r\n                </Modal.Content>\r\n                <Message>\r\n                    New to us? <a href='/register'>Register</a>\r\n                </Message>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        domain: state.auth.domain,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loginUser: bindActionCreators(loginUserAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)","const constants = {\n    AddGroup: 'AddGroup',\n    AddGroup_Success: 'AddGroup_Success',\n    AddGroup_Failure: 'AddGroup_Failure',\n\n    RemoveGroup: 'RemoveGroup',\n    RemoveGroup_Success: 'RemoveGroup_Success',\n    RemoveGroup_Failure: 'RemoveGroup_Failure',\n\n    RemoveContactFromCachedItems: 'RemoveContactFromCachedItems',\n\n    EditGroup: 'EditGroup',\n    EditGroup_Success: 'EditGroup_Success',\n    EditGroup_Failure: 'EditGroup_Failure',\n\n    FetchCachedGroup: 'FetchCachedGroup',\n    FetchCachedGroupNames: 'FetchCachedGroupName',\n    FetchCachedGroupItems: 'FetchCachedGroupItems',\n\n    FetchGroupList: 'FetchGroupList',\n    FetchGroupList_Success: 'FetchGroupList_Success',\n    FetchGroupList_Failure: 'FetchGroupList_Failure',\n\n    ChangeActive_Group: 'ChangeActive_Group',\n    ChangeActive_Group_Success: 'ChangeActive_Group_Success',\n    ChangeActive_Group_Failure: 'ChangeActive_Group_Failure',\n}\n\nexport default { ...constants }","import constants from '../constants/group'\nimport { proxy, handleError, getConfig } from '../api/api'\n\nconst { AddGroup, AddGroup_Success, AddGroup_Failure,\n        FetchCachedGroup, FetchCachedGroupNames, FetchCachedGroupItems,\n        FetchGroupList, FetchGroupList_Success, FetchGroupList_Failure,\n        RemoveGroup, RemoveGroup_Success, RemoveGroup_Failure,RemoveContactFromCachedItems,\n        EditGroup, EditGroup_Success, EditGroup_Failure } = constants\n\nexport const addGroupAction = function ({ name }) {\n    const config = getConfig();\n    const request = proxy.post('contacts/group/add', { name }, config)\n    return async (dispatch) => {\n        dispatch(addGroupStarted())\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('add group action', group)\n            if(group === null) {\n                dispatch(addGroupFailed(message))    \n            } else {\n                dispatch(addGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(addGroupFailed(errorMessage))\n        }\n    }\n    function addGroupStarted() { return { type: AddGroup, payload: {error: '', success: false, loading: 'addgroup'} } }\n    function addGroupSucceded(group) { return { type: AddGroup_Success, payload: { group, loading: '', success: true } } }\n    function addGroupFailed(error) { return { type: AddGroup_Failure, payload: { error, loading: ''} }}\n}\n\nexport const deleteGroupAction = function ({ groupid }) {\n    const config = getConfig();\n    const request = proxy.delete(`contacts/group/${groupid}`, config)\n    return async (dispatch) => {\n        dispatch(deleteGroupStarted(groupid))\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('delete group action', group)\n            if(group === null) {\n                dispatch(deleteGroupFailed(message))    \n            } else {\n                dispatch(deleteGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(deleteGroupFailed(errorMessage))\n        }\n    }\n    function deleteGroupStarted(groupid) { return { type: RemoveGroup, payload: {error: '', success: false, loading: groupid} } }\n    function deleteGroupSucceded(group) { return { type: RemoveGroup_Success, payload: { group, loading: '', success: true } } }\n    function deleteGroupFailed(error) { return { type: RemoveGroup_Failure, payload: { error, loading: ''} }}\n}\n\nexport const editGroupAction = function ({groupid, name, active}) {\n    const config = getConfig();\n    const request = proxy.put(`contacts/group/${groupid}`, { name, active }, config)\n    return async (dispatch) => {\n        dispatch(editGroupStarted())\n        try{\n            let resp = await request\n            let { group, message } = await resp.data\n            console.log('edit group action', group)\n            if(group === null) {\n                dispatch(editGroupFailed(message))    \n            } else {\n                dispatch(editGroupSucceded(group))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(editGroupFailed(errorMessage))\n        }\n    }\n    function editGroupStarted() { return { type: EditGroup, payload: {error: '', success: false, loading: true} } }\n    function editGroupSucceded(group) { return { type: EditGroup_Success, payload: { group, loading: false, success: true } } }\n    function editGroupFailed(error) { return { type: EditGroup_Failure, payload: { error, loading: false} }}\n}\n\nexport const fetchAllGroupsAction = function () {\n    var config = getConfig();\n    const request = proxy.get(`contacts/group/list`, config)\n    return async (dispatch) => {\n        dispatch(fetchGroupsStarted())\n        try{\n            let resp = await request\n            let result = await resp.data\n            if(result.groups === null) {\n                dispatch(fetchGroupsFailed(result.message))    \n            } else {\n                dispatch(fetchGroupsSucceded(result.groups))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(fetchGroupsFailed(errorMessage))\n        }\n    }\n    function fetchGroupsStarted() { return { type: FetchGroupList, payload: { loading: true, error: '' } } }\n    function fetchGroupsSucceded(groups) { return { type: FetchGroupList_Success, payload: { groups, loading: false } } }\n    function fetchGroupsFailed(error) { return { type: FetchGroupList_Failure, payload: { error, loading: false}}}\n}\n\nexport const fetchCachedGroupAction = function ({groupid}) {\n    return {\n        type: FetchCachedGroup,\n        payload: { groupid }\n    }\n}\n\nexport const fetchCachedGroupItemsAction = function ({groupid}) {\n    return {\n        type: FetchCachedGroupItems,\n        payload: { groupid }\n    }\n}\n\nexport const fetchCachedGroupNamesAction = function () {\n    return {\n        type: FetchCachedGroupNames,\n        payload: { }\n    }\n}\n\nexport const removeContactFromCachedItems = function({groupid, contactid}) {\n    return {\n        type: RemoveContactFromCachedItems,\n        payload: { groupid, contactid }\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { List, Card, Grid, Button, Label } from 'semantic-ui-react';\nimport { deleteGroupAction, fetchCachedGroupItemsAction } from '../../actions/group';\nimport { connect } from 'react-redux'\nimport {bindActionCreators} from 'redux'\n\nclass GroupComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        this.props.history.push(`/editgroup/${this.props.group.id}`)\n    }\n    onDelete = async event => {\n        event.preventDefault()\n        await this.props.removeGroup({groupid: this.props.group.id})\n    }\n    onSelect = async event => {\n        event.preventDefault()\n        await this.props.fetchGroup({groupid: event.target.name})\n    }\n    render() {\n        let { id, name, active, total } = this.props.group\n        let selectedGroup = this.props.selectedGroup ? this.props.selectedGroup.name : 'All Contacts'\n        let editable = name !== 'All Contacts'\n        return (\n            <List.Item key={id} >\n                <Card fluid color={selectedGroup === name ? 'red' : 'grey'} >\n                    <Card.Content>\n                        <Grid columns={2}>\n                            <Grid.Row >\n                                <Grid.Column textAlign='left'>\n                                    <div >\n                                        <Link name={id} to={`/dashboard/${id}`} onClick={this.onSelect}>{name}</Link>\n                                        <Label circular size='mini' color={ active ? 'green' : 'grey' } style={{marginLeft:'0.5em'}} >{total}</Label>\n                                    </div>\n                                </Grid.Column>\n                                <Grid.Column textAlign='right' >\n                                {   editable && \n                                    <div>\n                                        <Button icon='pencil' size='mini' circular color='yellow'\n                                            onClick={this.onEdit}/>\n                                        <Button icon='delete' size='mini' circular \n                                            loading = {this.props.loading === id}\n                                            onClick={this.onDelete} />\n                                    </div>\n                                }\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.group.loading,\n        error: state.group.error,\n        selectedGroup: state.group.selectedGroup\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeGroup: bindActionCreators(deleteGroupAction, dispatch),\n        fetchGroup: bindActionCreators(fetchCachedGroupItemsAction, dispatch)\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupComponent)","import React, { Component } from 'react'\nimport GroupComponent from './group';\nimport { Grid, List, Segment, Header, Input, Icon, Button } from 'semantic-ui-react';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { addGroupAction, fetchAllGroupsAction } from '../../actions/group'\n\nclass GroupContainerComponent extends Component {\n\n    state = {\n        newgroup:''\n    }\n    \n    async componentDidMount() {\n        await this.props.fetchAllGroups()\n    }\n\n    onSearchChange = () => {\n        \n    }\n\n    onAddGroup = async event => {\n        await this.props.addGroup({name: this.state.newgroup})\n        if(this.props.error) {\n            alert(this.props.error)\n        }\n        this.setState({newgroup: ''})\n    }\n\n    onChangeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    render () {\n        let groups = []\n        let allcontacts = { id: '00000', name: 'All Contacts', active: true }\n        groups.push(allcontacts)\n        allcontacts.total = 0\n        this.props.groups.forEach(g => {\n            allcontacts.total += g.contacts.length\n            groups.push(g)\n        })\n\n        return (\n            <Segment>\n                <Grid columns={2}>\n                    <Grid.Row>\n                        <Grid.Column > \n                            <Header color='yellow'>\n                                <Icon name='group' />\n                                <Header.Content>Groups</Header.Content>\n                            </Header>\n                        </Grid.Column>\n                        <Grid.Column align='right'>\n                            <Input fluid \n                                name='newgroup'\n                                label={<Button icon='add' loading={this.props.loading} compact onClick={this.onAddGroup}/>}\n                                labelPosition='right'\n                                value={this.state.newgroup}\n                                placeholder='Add new group' \n                                onChange={this.onChangeHandler}/>\n                        </Grid.Column>\n                        <Grid.Column >\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <List >\n                    {\n                        groups.map(g => \n                            <GroupComponent name={g.name} key={g.name} group={g} {...this.props}/>)\n                    }\n                </List>\n            </Segment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        deletedContact: state.contact.deletedContact,\n        groups: state.group.groups,\n        loading: state.group.loading === 'addgroup',\n        error: state.group.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addGroup: bindActionCreators(addGroupAction, dispatch),\n        fetchAllGroups: bindActionCreators(fetchAllGroupsAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupContainerComponent)","const constants = {\r\n    AddContact: 'AddContact',\r\n    AddContact_Success: 'AddContact_Success',\r\n    AddContact_Failure: 'AddContact_Failure',\r\n\r\n    RemoveContact: 'RemoveContact',\r\n    RemoveContact_Success: 'RemoveContact_Success',\r\n    RemoveContact_Failure: 'RemoveContact_Failure',\r\n\r\n    EditContact: 'EditContact',\r\n    EditContact_Success: 'EditContact_Success',\r\n    EditContact_Failure: 'EditContact_Failure',\r\n\r\n    FetchContact: 'FetchContact',\r\n    FetchContact_Success: 'FetchContact_Success',\r\n    FetchContact_Failure: 'FetchContact_Failure',\r\n\r\n    ChangeActive_Contact: 'ChangeActive_Contact',\r\n    ChangeActive_Contact_Success: 'ChangeActive_Contact_Success',\r\n    ChangeActive_Contact_Failure: 'ChangeActive_Contact_Failure',\r\n}\r\n\r\nexport default { ...constants }","import constants from '../constants/contact'\nimport { proxy, handleError, getConfig } from '../api/api'\n\nconst { AddContact, AddContact_Success, AddContact_Failure,\n        EditContact, EditContact_Success, EditContact_Failure,\n        RemoveContact, RemoveContact_Failure, RemoveContact_Success } = constants\n\nexport const addContactAction = function ({ name, phone, email, job, group, active }) {\n    const config = getConfig();\n    console.log(name, phone, email, job, group, active)\n    const request = proxy.post('contacts/add', { name, phone, email, job, group, active }, config)\n    return async (dispatch) => {\n        dispatch(addContactStarted())\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            //console.log('addContactAction', contact)\n            if(contact === null) {\n                dispatch(addContactFailed(message))\n            } else {\n                dispatch(addContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(addContactFailed(errorMessage))\n        }\n    }\n    function addContactStarted() { return { type: AddContact, payload: {error: '', success: false, loading: true} } }\n    function addContactSucceded(contact) { return { type: AddContact_Success, payload: { contact, loading: false, success: true } } }\n    function addContactFailed(error) { return { type: AddContact_Failure, payload: { error, loading: false} }}\n}\n\nexport const editContactAction = function ({ id, name, email, job, active, phone, group }) {\n    const config = getConfig();\n    const request = proxy.put(`contacts/${id}`, { name, email, job, active, phone, group }, config)\n    return async (dispatch) => {\n        dispatch(editContactStarted(id))\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            console.log('editContactAction', contact)\n            if(contact === null) {\n                dispatch(editContactFailed(message))\n            } else {\n                dispatch(editContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(editContactFailed(errorMessage))\n        }\n    }\n    function editContactStarted(id) { return { type: EditContact, payload: {error: '', success: false, loading: id} } }\n    function editContactSucceded(contact) { return { type: EditContact_Success, payload: { contact, loading: false, success: true } } }\n    function editContactFailed(error) { return { type: EditContact_Failure, payload: { error, loading: false} }}\n}\n\nexport const removeContactAction = function ({contactid}) {\n    const config = getConfig();\n    const request = proxy.delete(`contacts/${contactid}`, config)\n    return async (dispatch) => {\n        dispatch(deleteContactStarted(contactid))\n        try{\n            let resp = await request\n            let { contact, message } = await resp.data\n            console.log('removeContactAction', contact)\n            if(contact === null) {\n                dispatch(deleteContactFailed(message))\n            } else {\n                dispatch(deleteContactSucceded(contact))\n            }\n        }catch(error) {\n            let errorMessage = handleError(error)\n            dispatch(deleteContactFailed(errorMessage))\n        }\n    }\n    function deleteContactStarted(id) { return { type: RemoveContact, payload: {error: '', success: false, loading: id} } }\n    function deleteContactSucceded(contact) { return { type: RemoveContact_Success, payload: { contact, loading: '', success: true } } }\n    function deleteContactFailed(error) { return { type: RemoveContact_Failure, payload: { error, loading: ''} }}\n}","import React, { Component } from 'react'\nimport { List, Card, Button, Grid, Label } from 'semantic-ui-react';\nimport { bindActionCreators } from 'redux';\nimport { removeContactAction } from '../../actions/contact';\nimport { connect } from 'react-redux'\nimport { removeContactFromCachedItems } from '../../actions/group';\n\nclass ContactComponent extends Component {\n    onEdit = event => {\n        event.preventDefault()\n        console.log('contact component', this.props.contact)\n        this.props.history.push({\n            pathname: `/editcontact/${this.props.contact._id}`,\n            state: { data: this.props.contact}\n        })\n    }\n    onDelete = async event => {\n        event.preventDefault()\n        await this.props.removeContact({contactid: this.props.contact._id})\n        await this.props.removeItemFromGroup({ groupid: this.props.contact.group, \n                                                        contactid: this.props.contact._id })\n    }\n    render() {\n        let { _id, name, email, phone, job, active } = this.props.contact\n        //console.log('contact form', this.props.contact)\n        return (\n            <List.Item key={_id} >\n                <Card fluid>\n                    <Card.Content>\n                        <Card.Header >\n                            {name}\n                            <Label circular size='mini'\n                                color={active ? 'green' : 'grey'} \n                                style={{marginLeft:'0.5em'}} content={job}/>\n                        </Card.Header>\n                        <Grid columns={2} >\n                            <Grid.Row>\n                                <Grid.Column textAlign='left'>\n                                    \n                                    <div>{email}</div>\n                                    <div>{phone}</div>\n                                </Grid.Column>\n                                <Grid.Column textAlign='right'>\n                                    <div>\n                                        <Button icon='pencil' size='mini' circular color='yellow'\n                                            onClick={this.onEdit} />\n                                        <Button icon='delete' size='mini' circular loading={this.props.loading === _id}\n                                            onClick={this.onDelete} />\n                                    </div>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Card.Content>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    //console.log('mapstate to props', state.contact)\n    return {\n        //contact: state.contact.contact,\n        loading: state.contact.loading,\n        error: state.contact.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeContact: bindActionCreators(removeContactAction, dispatch),\n        removeItemFromGroup: bindActionCreators(removeContactFromCachedItems, dispatch)\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)( ContactComponent)","import React, { Component } from 'react'\nimport { List, Segment, Header, Grid, Input, Icon, Select, Button, Pagination } from 'semantic-ui-react';\nimport ContactComponent from './contact';\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport { fetchCachedGroupItemsAction } from '../../actions/group'\n\nclass ContactContainerComponent extends Component {\n    state = {\n        activePage: 1,\n        totalPages: 5,\n        searchString: '',\n        searchBy: 'name',\n        sortBy: 'name',\n        dosort: '',\n        dosearch: '',\n        sortOptions: [  { key: 'none', text: 'none', value: 'none' },\n                    { key: 'name', text: 'name', value: 'name' },\n                    { key: 'email', text: 'email', value: 'email' },],\n        searchOptions: [  { key: 'name', text: 'name', value: 'name' },\n                    { key: 'email', text: 'email', value: 'email' }, ],\n        pagesize: '3',\n        pageSizeOptions: [\n                        { key: '3', text: '3', value: '3' },\n                        { key: '5', text: '5', value: '5' },\n                        { key: '10', text: '10', value: '10' },\n                        { key: '15', text: '15', value: '15' },\n                        { key: '20', text: '20', value: '20' }, ]\n    }\n\n    handlePaginationChange = (e, { activePage }) => {\n        console.log('active page', activePage)\n        this.setState({ activePage })\n    }\n\n    onSearch = () => {\n        this.setState({dosearch: true})\n    }\n\n    onSort = () => {\n        this.setState({dosort: true})\n    }\n\n    onChangeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSelectionChange = (name, value) => {\n        this.setState({[name]: value})\n    }\n    async componentDidMount() {\n        console.log('component did mount - contact container')\n        let groupid = this.props.match.params.group || '00000'\n        await this.props.fetchAllGroups({groupid})\n    }\n    render() {\n        let selectedGroup = this.props.selectedGroup// this.props.match.params.group || 'All Contacts'\n        let contactList = null\n        let groupname = ''\n        let pageCount = 1\n        if(selectedGroup) {\n            contactList = [...selectedGroup.contacts]\n            groupname = selectedGroup.name\n        }\n        if(this.state.searchString && contactList !== null && contactList.length > 1) {\n            let ss = this.state.searchString.toUpperCase()\n            if(this.state.searchBy === 'name') {\n                contactList = contactList.filter(c => c.name.toUpperCase().includes(ss))\n            } else if(this.state.searchBy === 'email') {\n                contactList = contactList.filter(c => c.email.toUpperCase().includes(ss))\n            } \n        }\n        if(this.state.sortBy !== 'none' && contactList !== null && contactList.length > 1) {\n            if(this.state.sortBy === 'name') {\n                contactList = contactList.sort(function(a, b){\n                    if(a.name < b.name) { return -1; }\n                    if(a.name > b.name) { return 1; }\n                    return 0;\n                })\n            } else if(this.state.sortBy === 'email') {\n                contactList = contactList.sort(function(a, b){\n                    if(a.email < b.email) { return -1; }\n                    if(a.email > b.email) { return 1; }\n                    return 0;\n                })\n            }\n        }\n        if(contactList) {\n            let ps = parseInt(this.state.pagesize)\n            let totalPages = Math.ceil(contactList.length / ps)\n            if(contactList.length > totalPages * ps)\n            {\n                //we will need one more page\n                totalPages += 1\n            }\n            pageCount = totalPages\n            let pn = this.state.activePage\n            let startIndex = (pn - 1) * ps\n            let endIndex = pn * ps\n            contactList = contactList.slice(startIndex, endIndex)\n        }\n        return (\n            <div>\n                <Segment>\n                    <Grid columns={3}>\n                        <Grid.Column width={4}>\n                            <Header color='yellow' >\n                                <Icon name='address card' />\n                                <Header.Content>{groupname}</Header.Content>\n                            </Header>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Input type='text' placeholder='Search ...'>\n                                <input name='searchString' onChange={this.onChangeHandler}/>\n                                <Select compact options={this.state.searchOptions} \n                                    defaultValue='name' \n                                    onChange={e => this.onSelectionChange('searchBy', e.target.textContent)}/>\n                                {\n                                //<Button icon='search' compact onClick={this.onSearch}/>\n                                }\n                            </Input>\n                        </Grid.Column>\n                        <Grid.Column width={3} align='right'>\n                            <Input >\n                                <Select compact options={this.state.sortOptions} \n                                    defaultValue='none' \n                                    onChange={e => this.onSelectionChange('sortBy', e.target.textContent)}/>\n                                <Button disabled compact icon='sort' onClick={this.onSort}/>\n                            </Input>\n                        </Grid.Column>\n                    </Grid>\n                    {   contactList && \n                        <List selection> \n                            { \n                                contactList.map(c => <ContactComponent key={c.email} contact={c} {...this.props}/>)\n                            }\n                        </List>\n                    }\n                    \n                </Segment>\n                <Segment>\n                    <Pagination pointing secondary\n                        activePage={this.state.activePage}\n                        onPageChange={this.handlePaginationChange}\n                        totalPages={pageCount}\n                    />\n                    <Input>\n                        <Select name='pagesize' compact\n                            style={{marginLeft:'1em'}} \n                            options={this.state.pageSizeOptions} \n                            defaultValue={this.state.pagesize}\n                            onChange={e => this.onSelectionChange('pagesize', e.target.textContent)}/>\n                        <Button disabled>Page Size</Button>\n                    </Input>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        deletedContact: state.contact.deletedContact,\n        selectedGroup: state.group.selectedGroup,\n        error: state.group.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchAllGroups: bindActionCreators(fetchCachedGroupItemsAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactContainerComponent)","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport GroupContainerComponent from './group/groupContainer';\nimport ContactContainerComponent from './contact/contactContainer';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <Grid stretched>\n                <Grid.Column width={6}>\n                    <GroupContainerComponent {...this.props}/>\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <ContactContainerComponent {...this.props}/>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, {Component} from 'react'\nimport { Input, Button, Modal, Divider, Checkbox, Header } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { fetchCachedGroupAction, editGroupAction } from '../../actions/group';\n\nclass EditGroupComponent extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            group:'',\n            active: false,\n            open: true,\n        }\n    }\n\n    async componentDidMount() {\n        await this.props.fetchCachedGroup({groupid: this.props.match.params.id})\n        this.setState({group: this.props.dirtyGroup.name, active: this.props.dirtyGroup.active})\n    }\n    onChangeHandler = (e) => {\n        e.preventDefault()\n        this.setState({[e.target.name]: e.target.value})\n    }\n    onCheckedChange = (name) => {\n        this.setState({[name]: !this.state[name]})\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        let options = { \n                        groupid: this.props.dirtyGroup.id, \n                        name: this.state.group }\n        if(this.state.active !== this.props.dirtyGroup.active) {\n            options.active = this.state.active\n        }\n        console.log('on edit group', options)\n        await this.props.editGroup(options)\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    render() {\n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true} >\n                <Header color='orange' style={{background:'orange'}}>Group Information</Header>\n                <Modal.Content>\n                    <Input name=\"group\" fluid placeholder='Enter group' style={{marginTop: '0.5em'}}\n                        icon='group' iconPosition='left' \n                        onChange={this.onChangeHandler} \n                        value={ this.state.group }/>\n                    <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                        label={ this.state.active ? 'deactivate' : 'activate'}\n                        checked = { this.state.active }\n                        onChange={ e => this.onCheckedChange('active')} />\n                    { this.props.error && <span style={{color:'red'}}>{this.props.error}</span>}\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' color='orange' \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        dirtyGroup: state.group.dirtyGroup,\n        loading: state.group.loading,\n        error: state.group.error\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCachedGroup: bindActionCreators(fetchCachedGroupAction, dispatch),\n        editGroup: bindActionCreators(editGroupAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupComponent)","import React, {Component} from 'react'\nimport { Input, Button, Modal, Divider, Checkbox, Header, Select } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport validator from 'validator'\nimport { addContactAction, editContactAction } from '../../actions/contact';\n\nclass EditContactComponent extends Component {\n    constructor(props){\n        super(props)\n        let contact = {} \n        if(this.props.match.params.id) {\n            contact = { ...this.props.location.state.data}\n            //trim domain from email\n            contact.email = contact.email.replace(this.props.domain, '')\n        }\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: contact.name || '',\n            job: contact.job || '',\n            phone: contact.phone || '',\n            email: contact.email || '',\n            group: contact.group ,\n            groupname: contact.groupname,\n            groupoptions: [],\n            active: contact.active,\n            open: true,\n        }\n    }\n\n    async componentDidMount() {\n        let groups = this.props.groups || []\n        let options = []\n        \n        if(groups.length > 0) {\n            let defaultGroup = ''\n            groups.forEach(g => {\n                options.push({key: g.id, text: g.name, value: g.name})\n            })\n            if(this.state.id) {\n                //we are editing existing contact\n                defaultGroup = this.state.groupname\n            } else {\n                defaultGroup = options[0].text\n            }\n            this.setState({group: defaultGroup})\n        }\n        this.setState({groupoptions: options})\n        if(this.state.id) {\n            //fetch cached contact detail\n        }\n    }\n\n    onSelectionChange = ({name, value}) => {\n        this.setState({[name]: value})\n    }\n\n    onChangeHandler = (e) => {\n        let tempValue = e.target.value\n        this.setState({[e.target.name]: tempValue})\n        if(e.target.name === 'email') {\n            let tempEmail = tempValue + this.props.domain\n            let error = ''\n            if(tempValue && !validator.isEmail(tempEmail)) {\n                error = 'Email not valid'\n            }\n            this.setState({emailError: error})\n        } else if(e.target.name === 'phone') {\n            let error = ''\n            if(tempValue && (!validator.isNumeric(tempValue) || tempValue.length < 10)) {\n                error = 'phone number not valid'\n            }\n            this.setState({phoneError: error})\n        } else if(e.target.name === 'name') {\n            let error = ''\n            if(tempValue === null || tempValue === undefined || tempValue === '') {\n                error = 'name is required field'\n            }\n            this.setState({nameError: error})\n        }\n    }\n\n    onSubmitHandler = async (event) => {\n        event.preventDefault()\n        this.setState({open: false})\n        let { id, name, phone, email, job, group, active, groupoptions } = this.state\n        let groupid = groupoptions.find(o => o.text === group).key\n        this.state.id ? \n            await this.props.editContact({id, name, phone, email, job, group: groupid, active}) :\n            await this.props.addContact({ name, phone, email, job, group:groupid, active})\n        this.props.history.push('/dashboard')\n    }\n\n    onExit = event => {\n        event.preventDefault()\n        this.setState({open: false})\n        this.props.history.push('/dashboard')\n    }\n\n    onCheckedChange = (name) => {\n        this.setState({[name]: !this.state[name]})\n    }\n\n    render() {\n        \n        return (\n            <Modal size='mini' open={this.state.open} closeOnEscape={true} closeOnDimmerClick={true}>\n                <Header color='orange' style={{background:'orange'}}>Contact Information</Header>\n                <Modal.Content>\n                    <Input name=\"name\" fluid placeholder='Enter name' style={{marginTop: '0.5em'}}\n                        value = {this.state.name}\n                        onChange={this.onChangeHandler} icon='user' iconPosition='left' />\n                    { this.state.nameError && <span style={{color:'red'}}>{this.state.nameError}</span>}\n\n                    <Input name=\"email\" fluid placeholder='Enter email' style={{marginTop: '0.5em'}}\n                        value = {this.state.email}\n                        onChange={this.onChangeHandler} icon='at' iconPosition='left' \n                        label='@inmar.com' labelPosition='right' />\n                    { this.state.emailError && <span style={{color:'red'}}>{this.state.emailError}</span>}                        \n                    <Input name=\"phone\" fluid placeholder='Enter phone' style={{marginTop: '0.5em'}}\n                        value = {this.state.phone}\n                        onChange={this.onChangeHandler} icon='phone' iconPosition='left' />\n                    { this.state.phoneError && <span style={{color:'red'}}>{this.state.phoneError}</span>}\n\n                    {<Input name=\"job\" fluid placeholder='Enter job role' style={{marginTop: '0.5em'}}\n                        value = {this.state.job}\n                        onChange={this.onChangeHandler} icon='info' iconPosition='left' />\n                    }\n\n                    <Input fluid style={{marginTop:'0.5em'}} onChange={this.onChangeHandler}>\n                        <Select name = 'group' compact fluid options={this.state.groupoptions || []} selection\n                            value = { this.state.group }\n                            onChange={event => this.onSelectionChange({name: 'group', value: event.target.textContent })} />\n                        <Button disabled>Group</Button>\n                    </Input>\n\n                    {   \n                        //display active/inactive checkbox when editing existing contact\n                        this.state.id && \n                        <Checkbox name = 'active' toggle style={{marginTop:'1em'}}\n                            label={ this.state.active ? 'deactivate' : 'activate'}\n                            checked = { this.state.active }\n                            onChange={ e => this.onCheckedChange('active')} />\n                    }\n\n                    {//display error information\n                        this.props.error && <span style={{color:'red'}}>{this.props.error}</span>\n                    }\n                    <Divider></Divider>\n                    <Button.Group>\n                        <Button name='Save' primary \n                            onClick = {this.onSubmitHandler}\n                            loading= { this.props.loading } icon='save' content='' circular compact></Button>\n                        <Button.Or />\n                        <Button name='Cancel' secondary onClick = {this.onExit} icon='cancel' content='' circular compact></Button>\n                    </Button.Group>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nfunction mapStateToPrps(state) {\n    console.log('editContact', state)\n    return {\n        domain: state.auth.domain,\n        contact: state.currentContact,\n        groups: state.group.groups,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addContact: bindActionCreators(addContactAction, dispatch),\n        editContact: bindActionCreators(editContactAction, dispatch)\n    }\n}\n\nexport default connect(mapStateToPrps, mapDispatchToProps)(EditContactComponent)","import React, {Component} from 'react'\r\nimport { Segment, Grid, Header, Button, Icon } from 'semantic-ui-react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass HeaderComponent extends Component {\r\n    \r\n    onAddContact = event => {\r\n        event.preventDefault()\r\n        this.props.history.push('/addcontact')\r\n    }\r\n    onLogout = event => {\r\n        event.preventDefault()\r\n        sessionStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        let user = sessionStorage.getItem('name')\r\n        return (\r\n                    <Segment inverted color='yellow'>\r\n                        <Grid>\r\n                            <Grid.Column width={12}>\r\n                                <Header as='h2' color='orange'>\r\n                                    <Icon name='address book' />\r\n                                    <Header.Content>\r\n                                        Contact Manager\r\n                                    <Header.Subheader>{`Hi, ${user}`}</Header.Subheader>\r\n                                    </Header.Content>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width='4'>\r\n                                <Button icon='plus' compact circular content='Add Contact' \r\n                                    onClick={this.onAddContact}></Button>\r\n                                <Button icon='lock' compact circular content='Logout' \r\n                                    onClick={this.onLogout}></Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Segment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(HeaderComponent)","import React, { Component } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport PrivateRoute from './privateroute'\nimport register from '../user/register';\nimport login from '../user/login';\nimport Dashboard from '../dashboard'\nimport EditGroupComponent from '../group/editGroup'\nimport EditContactComponent from '../contact/editContact'\nimport { fetchDomainAction } from '../../actions/auth'\nimport HeaderComponent from '../header'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nclass App extends Component {\n  componentDidMount = async () => {\n    //console.log('in app loading')\n    await this.props.fetchDomain()\n  }\n  render() {\n    return (\n          <BrowserRouter>\n            <Container>\n              <HeaderComponent />\n              <Switch>\n                <Route exact path=\"/\" component={login}/>\n                <Route exact path=\"/Login\" component={login}/>\n                <Route exact path=\"/Register\" component={register}/>\n                { /* below all will be protected routes*/ }\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/dashboard/:group\" component={Dashboard}/>\n                <PrivateRoute exact path=\"/editgroup/:id\" component={EditGroupComponent}/>\n                <PrivateRoute exact path=\"/addcontact\" component={EditContactComponent}/>\n                <PrivateRoute exact path=\"/editcontact/:id\" component={EditContactComponent}/>\n              </Switch>\n            </Container>\n          </BrowserRouter>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchDomain: bindActionCreators(fetchDomainAction, dispatch)\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import globals from '../constants/auth'\r\n\r\nlet initialState = {\r\n    domain: '',\r\n    user: '',\r\n    token: '',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case globals.LOGIN:\r\n        case globals.LOGIN_FAILED:\r\n        case globals.LOGIN_SUCCEDED:\r\n        case globals.REGISTER:\r\n        case globals.REGISTER_FAILED:\r\n        case globals.REGISTER_SUCCEDED:\r\n        case globals.FETCHDOMAIN:\r\n        case globals.FETCHDOMAIN_SUCCEDED:\r\n        case globals.FETCHDOMAIN_FAILED:\r\n            return { ...state, ...action.payload }\r\n        default:\r\n            return { ...state}\r\n    }\r\n}\r\n\r\nexport default authReducer","import globals from '../constants/contact'\r\n\r\nlet initialState = {\r\n    contact: {},\r\n    key:'',\r\n    loading: false,\r\n    error: '',\r\n    errorMessage: '',\r\n    success: false,\r\n}\r\n\r\nconst contactReducer = (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case globals.AddContact:\r\n        case globals.AddContact_Failure:\r\n        case globals.AddContact_Success:\r\n        case globals.EditContact:\r\n        case globals.EditContact_Failure:\r\n        case globals.EditContact_Success:\r\n        case globals.RemoveContact:\r\n        case globals.RemoveContact_Failure:\r\n        case globals.RemoveContact_Success:\r\n            //console.log('contact reducer for remove contact', action.payload)\r\n            return  { ...state, \r\n                        deletedContact: action.payload.contact, \r\n                        loading: action.payload.loading, \r\n                        error: action.payload.error\r\n                    }\r\n        case globals.FetchContact_Success:\r\n        case globals.FetchContact:\r\n        case globals.FetchContact_Failure:\r\n            return { ...state, ...action.payload}\r\n        default: \r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default contactReducer","import globals from '../constants/group'\n\nlet initialState = {\n    groups: [/* list of groups and underneath contact list*/],\n    selectedGroup: null,\n    loading: false,\n    error: '',\n    errorMessage: '',\n    success: false,\n}\n\nconst groupReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case globals.EditGroup:\n        case globals.EditGroup_Failure:\n        case globals.EditGroup_Success:\n        case globals.RemoveGroup:\n        case globals.RemoveGroup_Failure:\n        case globals.AddGroup:\n        case globals.AddGroup_Failure:\n        case globals.FetchGroupList:\n        case globals.FetchGroupList_Failure:\n            return { ...state, ...action.payload}\n        case globals.AddGroup_Success:\n            return { ...state, groups: [...state.groups, action.payload.group], ...action.payload} \n        case globals.RemoveGroup_Success:\n            //removed all contacts with the group id\n            let filtered = state.groups.filter(group => group.id !== action.payload.group.id)\n            return { ...state, groups: filtered, ...action.payload}\n        case globals.FetchCachedGroup:\n            let dirtyGroup = state.groups.find(g => g.id === action.payload.groupid)\n            return { ...state, dirtyGroup }\n        case globals.FetchCachedGroupNames:\n            return { ...state, groupNames: state.groups }\n        case globals.FetchCachedGroupItems:\n            let selectedGroup = {\n                id: '00000',\n                name: 'All Contacts',\n                active: true,\n                total: 0,\n                contacts: []\n            }\n            if(action.payload.groupid === '00000') {\n                //we want all contacts to be displayed\n                state.groups.forEach(g => {\n                    if(g.total > 0) \n                        selectedGroup.contacts.push(...g.contacts)\n                })\n            } else {\n                //selective group\n                selectedGroup = state.groups.find(g => g.id === action.payload.groupid)\n            }\n            return { ...state, selectedGroup}\n        \n        case globals.FetchGroupList_Success:\n            let allGroups = {\n                id: '00000',\n                name: 'All Contacts',\n                active: true,\n                total: 0,\n                contacts: []\n            }\n            //we want all contacts to be displayed at initial rendering\n            if(action.payload.groups) {\n                action.payload.groups.forEach(g => {\n                    if(g.total > 0) \n                        allGroups.contacts.push(...g.contacts)\n                })\n            }\n            return { ...state, selectedGroup: allGroups, ...action.payload}\n        case globals.RemoveContactFromCachedItems:\n            //remove contact from cached collection\n            let { groupid, contactid } = action.payload\n            let tempGroup = state.groups.find(g => g.id === groupid)\n            tempGroup.contacts = tempGroup.contacts.filter(c => c._id !== contactid)\n            tempGroup.total -= 1\n            //remove contact from currently displayed contact list\n            let currentContacts = state.selectedGroup.contacts.filter(c => c._id !== contactid)\n            //console.log('filtered current contacts',currentContacts)\n            //state.selectedGroup.contacts = currentContacts\n            let groups = [...state.groups.filter(g => g.id !== groupid), tempGroup]\n            return { ...state, groups, selectedGroup: { contacts: currentContacts }, ...action.payload }\n        default: \n            return { ...state }\n    }\n}\n\nexport default groupReducer","import authReducer from './authReducer'\r\nimport contactReducer from './contactReducer'\r\nimport groupReducer from './groupReducer'\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    contact: contactReducer,\r\n    group: groupReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/index'\r\n\r\n//create store\r\nconst store = createStore(\r\n    rootReducer, \r\n    applyMiddleware(\r\n        thunk\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}